<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				version="1.0"
				xml:space="default"
				xmlns:xmlidl="urn:odgs-oce-net:schemas-nano-rpc-idl" >
	<xsl:param name="_guard_name" />
	<xsl:param name="_template_name" />
	<xsl:param name="_document_name" />
	<xsl:param name="_output_interface_header" />

	<xsl:output method="text" encoding="utf-8" />

	<xsl:variable name="typemap" select="document('cpp-types.xml')" />
	<xsl:include href="common.xsl" />

	<xsl:template match="/xmlidl:idl">
		<xsl:text>// Generated by the IdlCompiler. DO NOT EDIT!&#10;</xsl:text>
		<xsl:text>// source: </xsl:text><xsl:value-of select="$_document_name"/><xsl:text>&#10;</xsl:text>
		<xsl:text>// template: </xsl:text><xsl:value-of select="$_template_name"/><xsl:text>&#10;</xsl:text>

		<xsl:text>&#10;</xsl:text>
		
		<xsl:variable name="guard" select="concat( $_guard_name, '__' )" />
		<xsl:text>#if !defined( </xsl:text><xsl:value-of select="$guard" />
		<xsl:text> )&#10;#define </xsl:text><xsl:value-of select="$guard" />
		<xsl:text>&#10;&#10;</xsl:text>

		<xsl:text>#include &lt;string&gt;</xsl:text>
		<xsl:text>&#10;&#10;</xsl:text>

		<xsl:text><![CDATA[#include "nano_rpc.hpp"]]>&#10;&#10;</xsl:text>

		<xsl:text><![CDATA[#include "]]></xsl:text>
		<xsl:value-of select="$_output_interface_header" />
		<xsl:text><![CDATA["]]></xsl:text>
		<xsl:text>&#10;&#10;</xsl:text>

		<xsl:if test="boolean(@namespace)">
			<xsl:text>namespace </xsl:text>
			<xsl:value-of select="@namespace" />
			<xsl:text> {&#10;&#10;</xsl:text>
		</xsl:if>

		<xsl:apply-templates select="xmlidl:interfaces/xmlidl:interface" />

		<xsl:if test="boolean(@namespace)">
			<xsl:text>} // namespace&#10;&#10;</xsl:text>
		</xsl:if>

		<xsl:text>#endif // </xsl:text>
		<xsl:value-of select="$guard" />
		<xsl:text>&#10;&#10;</xsl:text>
	</xsl:template>

	<xsl:template match="xmlidl:interface" >
		<!--
			class IExampleService_Stub : public NanoRpc::IRpcStub
			{
				public:
		-->
		<xsl:text>class </xsl:text><xsl:value-of select="@name" /><xsl:text>_Stub : public NanoRpc::IRpcStub</xsl:text>
		<xsl:text>&#10;{&#10;</xsl:text>
		<xsl:text>public:&#10;</xsl:text>

		<!-- 
			explicit IExampleService_Stub( NanoRpc::IRpcObjectManager *object_manager, IObjectContainer IExampleService* impl ) : impl_( impl ) {} 
		-->
		<xsl:text>&#09;explicit </xsl:text>
		<xsl:value-of select="@name"/><xsl:text>_Stub( </xsl:text>
		<xsl:text>NanoRpc::IRpcObjectManager* object_manager, </xsl:text>
		<xsl:value-of select="@name"/><xsl:text>* impl ) :&#10;&#09;&#09;object_manager_( object_manager ), impl_( impl )&#10;&#09;{&#10;&#09;}&#10;</xsl:text>
		
		<!--
			const char *GetInterfaceName() const;
		-->
		<xsl:text>&#10;&#09;</xsl:text>
		<xsl:text><![CDATA[const char *GetInterfaceName() const;]]>&#10;</xsl:text>

		<!-- 
			void CallMethod( const NanoRpc::RpcCall &rpc_call, NanoRpc::RpcResult *rpc_result ); 
		-->
		<xsl:text>&#10;&#09;</xsl:text>
		<xsl:text><![CDATA[void CallMethod( const NanoRpc::RpcCall &rpc_call, NanoRpc::RpcResult *rpc_result );]]>&#10;&#10;</xsl:text>

		<!--
			private:
				IRpcObjectManager* object_manager_;
				IExampleService* impl_;
		-->
		<xsl:text>private:&#10;</xsl:text>
		<xsl:text>&#09;NanoRpc::IRpcObjectManager* object_manager_;&#10;</xsl:text>
		<xsl:text>&#09;</xsl:text><xsl:value-of select="@name" /><xsl:text>* impl_;&#10;</xsl:text>

		<xsl:text>};&#10;&#10;&#10;</xsl:text>
	</xsl:template>

</xsl:stylesheet>

