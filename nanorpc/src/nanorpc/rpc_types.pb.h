// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nanorpc/rpc_types.proto

#ifndef PROTOBUF_nanorpc_2frpc_5ftypes_2eproto__INCLUDED
#define PROTOBUF_nanorpc_2frpc_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class DescriptorProto;
class DescriptorProtoDefaultTypeInternal;
extern DescriptorProtoDefaultTypeInternal _DescriptorProto_default_instance_;
class DescriptorProto_ExtensionRange;
class DescriptorProto_ExtensionRangeDefaultTypeInternal;
extern DescriptorProto_ExtensionRangeDefaultTypeInternal _DescriptorProto_ExtensionRange_default_instance_;
class DescriptorProto_ReservedRange;
class DescriptorProto_ReservedRangeDefaultTypeInternal;
extern DescriptorProto_ReservedRangeDefaultTypeInternal _DescriptorProto_ReservedRange_default_instance_;
class EnumDescriptorProto;
class EnumDescriptorProtoDefaultTypeInternal;
extern EnumDescriptorProtoDefaultTypeInternal _EnumDescriptorProto_default_instance_;
class EnumOptions;
class EnumOptionsDefaultTypeInternal;
extern EnumOptionsDefaultTypeInternal _EnumOptions_default_instance_;
class EnumValueDescriptorProto;
class EnumValueDescriptorProtoDefaultTypeInternal;
extern EnumValueDescriptorProtoDefaultTypeInternal _EnumValueDescriptorProto_default_instance_;
class EnumValueOptions;
class EnumValueOptionsDefaultTypeInternal;
extern EnumValueOptionsDefaultTypeInternal _EnumValueOptions_default_instance_;
class FieldDescriptorProto;
class FieldDescriptorProtoDefaultTypeInternal;
extern FieldDescriptorProtoDefaultTypeInternal _FieldDescriptorProto_default_instance_;
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class FileDescriptorProto;
class FileDescriptorProtoDefaultTypeInternal;
extern FileDescriptorProtoDefaultTypeInternal _FileDescriptorProto_default_instance_;
class FileDescriptorSet;
class FileDescriptorSetDefaultTypeInternal;
extern FileDescriptorSetDefaultTypeInternal _FileDescriptorSet_default_instance_;
class FileOptions;
class FileOptionsDefaultTypeInternal;
extern FileOptionsDefaultTypeInternal _FileOptions_default_instance_;
class GeneratedCodeInfo;
class GeneratedCodeInfoDefaultTypeInternal;
extern GeneratedCodeInfoDefaultTypeInternal _GeneratedCodeInfo_default_instance_;
class GeneratedCodeInfo_Annotation;
class GeneratedCodeInfo_AnnotationDefaultTypeInternal;
extern GeneratedCodeInfo_AnnotationDefaultTypeInternal _GeneratedCodeInfo_Annotation_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class MethodDescriptorProto;
class MethodDescriptorProtoDefaultTypeInternal;
extern MethodDescriptorProtoDefaultTypeInternal _MethodDescriptorProto_default_instance_;
class MethodOptions;
class MethodOptionsDefaultTypeInternal;
extern MethodOptionsDefaultTypeInternal _MethodOptions_default_instance_;
class OneofDescriptorProto;
class OneofDescriptorProtoDefaultTypeInternal;
extern OneofDescriptorProtoDefaultTypeInternal _OneofDescriptorProto_default_instance_;
class OneofOptions;
class OneofOptionsDefaultTypeInternal;
extern OneofOptionsDefaultTypeInternal _OneofOptions_default_instance_;
class ServiceDescriptorProto;
class ServiceDescriptorProtoDefaultTypeInternal;
extern ServiceDescriptorProtoDefaultTypeInternal _ServiceDescriptorProto_default_instance_;
class ServiceOptions;
class ServiceOptionsDefaultTypeInternal;
extern ServiceOptionsDefaultTypeInternal _ServiceOptions_default_instance_;
class SourceCodeInfo;
class SourceCodeInfoDefaultTypeInternal;
extern SourceCodeInfoDefaultTypeInternal _SourceCodeInfo_default_instance_;
class SourceCodeInfo_Location;
class SourceCodeInfo_LocationDefaultTypeInternal;
extern SourceCodeInfo_LocationDefaultTypeInternal _SourceCodeInfo_Location_default_instance_;
class UninterpretedOption;
class UninterpretedOptionDefaultTypeInternal;
extern UninterpretedOptionDefaultTypeInternal _UninterpretedOption_default_instance_;
class UninterpretedOption_NamePart;
class UninterpretedOption_NamePartDefaultTypeInternal;
extern UninterpretedOption_NamePartDefaultTypeInternal _UninterpretedOption_NamePart_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace nanorpc {
class RpcCall;
class RpcCallDefaultTypeInternal;
extern RpcCallDefaultTypeInternal _RpcCall_default_instance_;
class RpcEvent;
class RpcEventDefaultTypeInternal;
extern RpcEventDefaultTypeInternal _RpcEvent_default_instance_;
class RpcMessage;
class RpcMessageDefaultTypeInternal;
extern RpcMessageDefaultTypeInternal _RpcMessage_default_instance_;
class RpcObject;
class RpcObjectDefaultTypeInternal;
extern RpcObjectDefaultTypeInternal _RpcObject_default_instance_;
class RpcResult;
class RpcResultDefaultTypeInternal;
extern RpcResultDefaultTypeInternal _RpcResult_default_instance_;
class SInt32Value;
class SInt32ValueDefaultTypeInternal;
extern SInt32ValueDefaultTypeInternal _SInt32Value_default_instance_;
class SInt64Value;
class SInt64ValueDefaultTypeInternal;
extern SInt64ValueDefaultTypeInternal _SInt64Value_default_instance_;
class WideStringValue;
class WideStringValueDefaultTypeInternal;
extern WideStringValueDefaultTypeInternal _WideStringValue_default_instance_;
}  // namespace nanorpc

namespace nanorpc {

namespace protobuf_nanorpc_2frpc_5ftypes_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_nanorpc_2frpc_5ftypes_2eproto

enum RpcStatus {
  RpcSucceeded = 0,
  RpcChannelFailure = 1,
  RpcUnknownMethod = 2,
  RpcProtocolError = 3,
  RpcUnknownInterface = 4,
  RpcInvalidCallParameter = 5,
  RpcStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RpcStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RpcStatus_IsValid(int value);
const RpcStatus RpcStatus_MIN = RpcSucceeded;
const RpcStatus RpcStatus_MAX = RpcInvalidCallParameter;
const int RpcStatus_ARRAYSIZE = RpcStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RpcStatus_descriptor();
inline const ::std::string& RpcStatus_Name(RpcStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RpcStatus_descriptor(), value);
}
inline bool RpcStatus_Parse(
    const ::std::string& name, RpcStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RpcStatus>(
    RpcStatus_descriptor(), name, value);
}
// ===================================================================

class RpcCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.RpcCall) */ {
 public:
  RpcCall();
  virtual ~RpcCall();

  RpcCall(const RpcCall& from);

  inline RpcCall& operator=(const RpcCall& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcCall& default_instance();

  static inline const RpcCall* internal_default_instance() {
    return reinterpret_cast<const RpcCall*>(
               &_RpcCall_default_instance_);
  }

  void Swap(RpcCall* other);

  // implements Message ----------------------------------------------

  inline RpcCall* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcCall& from);
  void MergeFrom(const RpcCall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // bytes call_data = 4;
  void clear_call_data();
  static const int kCallDataFieldNumber = 4;
  const ::std::string& call_data() const;
  void set_call_data(const ::std::string& value);
  #if LANG_CXX11
  void set_call_data(::std::string&& value);
  #endif
  void set_call_data(const char* value);
  void set_call_data(const void* value, size_t size);
  ::std::string* mutable_call_data();
  ::std::string* release_call_data();
  void set_allocated_call_data(::std::string* call_data);

  // uint64 object_id = 3;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 3;
  ::google::protobuf::uint64 object_id() const;
  void set_object_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:nanorpc.RpcCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr call_data_;
  ::google::protobuf::uint64 object_id_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.RpcResult) */ {
 public:
  RpcResult();
  virtual ~RpcResult();

  RpcResult(const RpcResult& from);

  inline RpcResult& operator=(const RpcResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcResult& default_instance();

  static inline const RpcResult* internal_default_instance() {
    return reinterpret_cast<const RpcResult*>(
               &_RpcResult_default_instance_);
  }

  void Swap(RpcResult* other);

  // implements Message ----------------------------------------------

  inline RpcResult* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcResult& from);
  void MergeFrom(const RpcResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_message = 2;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // bytes result_data = 3;
  void clear_result_data();
  static const int kResultDataFieldNumber = 3;
  const ::std::string& result_data() const;
  void set_result_data(const ::std::string& value);
  #if LANG_CXX11
  void set_result_data(::std::string&& value);
  #endif
  void set_result_data(const char* value);
  void set_result_data(const void* value, size_t size);
  ::std::string* mutable_result_data();
  ::std::string* release_result_data();
  void set_allocated_result_data(::std::string* result_data);

  // .nanorpc.RpcStatus status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::nanorpc::RpcStatus status() const;
  void set_status(::nanorpc::RpcStatus value);

  // @@protoc_insertion_point(class_scope:nanorpc.RpcResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::internal::ArenaStringPtr result_data_;
  int status_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.RpcMessage) */ {
 public:
  RpcMessage();
  virtual ~RpcMessage();

  RpcMessage(const RpcMessage& from);

  inline RpcMessage& operator=(const RpcMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcMessage& default_instance();

  static inline const RpcMessage* internal_default_instance() {
    return reinterpret_cast<const RpcMessage*>(
               &_RpcMessage_default_instance_);
  }

  void Swap(RpcMessage* other);

  // implements Message ----------------------------------------------

  inline RpcMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcMessage& from);
  void MergeFrom(const RpcMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .nanorpc.RpcCall call = 2;
  bool has_call() const;
  void clear_call();
  static const int kCallFieldNumber = 2;
  const ::nanorpc::RpcCall& call() const;
  ::nanorpc::RpcCall* mutable_call();
  ::nanorpc::RpcCall* release_call();
  void set_allocated_call(::nanorpc::RpcCall* call);

  // .nanorpc.RpcResult result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  const ::nanorpc::RpcResult& result() const;
  ::nanorpc::RpcResult* mutable_result();
  ::nanorpc::RpcResult* release_result();
  void set_allocated_result(::nanorpc::RpcResult* result);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nanorpc.RpcMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::nanorpc::RpcCall* call_;
  ::nanorpc::RpcResult* result_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WideStringValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.WideStringValue) */ {
 public:
  WideStringValue();
  virtual ~WideStringValue();

  WideStringValue(const WideStringValue& from);

  inline WideStringValue& operator=(const WideStringValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WideStringValue& default_instance();

  static inline const WideStringValue* internal_default_instance() {
    return reinterpret_cast<const WideStringValue*>(
               &_WideStringValue_default_instance_);
  }

  void Swap(WideStringValue* other);

  // implements Message ----------------------------------------------

  inline WideStringValue* New() const PROTOBUF_FINAL { return New(NULL); }

  WideStringValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WideStringValue& from);
  void MergeFrom(const WideStringValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WideStringValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:nanorpc.WideStringValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SInt32Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.SInt32Value) */ {
 public:
  SInt32Value();
  virtual ~SInt32Value();

  SInt32Value(const SInt32Value& from);

  inline SInt32Value& operator=(const SInt32Value& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SInt32Value& default_instance();

  static inline const SInt32Value* internal_default_instance() {
    return reinterpret_cast<const SInt32Value*>(
               &_SInt32Value_default_instance_);
  }

  void Swap(SInt32Value* other);

  // implements Message ----------------------------------------------

  inline SInt32Value* New() const PROTOBUF_FINAL { return New(NULL); }

  SInt32Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SInt32Value& from);
  void MergeFrom(const SInt32Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SInt32Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nanorpc.SInt32Value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SInt64Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.SInt64Value) */ {
 public:
  SInt64Value();
  virtual ~SInt64Value();

  SInt64Value(const SInt64Value& from);

  inline SInt64Value& operator=(const SInt64Value& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SInt64Value& default_instance();

  static inline const SInt64Value* internal_default_instance() {
    return reinterpret_cast<const SInt64Value*>(
               &_SInt64Value_default_instance_);
  }

  void Swap(SInt64Value* other);

  // implements Message ----------------------------------------------

  inline SInt64Value* New() const PROTOBUF_FINAL { return New(NULL); }

  SInt64Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SInt64Value& from);
  void MergeFrom(const SInt64Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SInt64Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:nanorpc.SInt64Value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 value_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.RpcObject) */ {
 public:
  RpcObject();
  virtual ~RpcObject();

  RpcObject(const RpcObject& from);

  inline RpcObject& operator=(const RpcObject& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcObject& default_instance();

  static inline const RpcObject* internal_default_instance() {
    return reinterpret_cast<const RpcObject*>(
               &_RpcObject_default_instance_);
  }

  void Swap(RpcObject* other);

  // implements Message ----------------------------------------------

  inline RpcObject* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcObject& from);
  void MergeFrom(const RpcObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 object_id = 1;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  ::google::protobuf::uint64 object_id() const;
  void set_object_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:nanorpc.RpcObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 object_id_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RpcEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nanorpc.RpcEvent) */ {
 public:
  RpcEvent();
  virtual ~RpcEvent();

  RpcEvent(const RpcEvent& from);

  inline RpcEvent& operator=(const RpcEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcEvent& default_instance();

  static inline const RpcEvent* internal_default_instance() {
    return reinterpret_cast<const RpcEvent*>(
               &_RpcEvent_default_instance_);
  }

  void Swap(RpcEvent* other);

  // implements Message ----------------------------------------------

  inline RpcEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RpcEvent& from);
  void MergeFrom(const RpcEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string event_name = 1;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // @@protoc_insertion_point(class_scope:nanorpc.RpcEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  mutable int _cached_size_;
  friend struct  protobuf_nanorpc_2frpc_5ftypes_2eproto::TableStruct;
};
// ===================================================================

static const int kExpandAsArgumentsFieldNumber = 90001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  expand_as_arguments;
static const int kEnumWrapperFieldNumber = 90002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  enum_wrapper;
static const int kEventSourceFieldNumber = 90301;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  event_source;
static const int kIsPropertyFieldNumber = 90401;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  is_property;
static const int kAsyncFieldNumber = 90402;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  async;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcCall

// string service = 1;
inline void RpcCall::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcCall::service() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.service)
  return service_.GetNoArena();
}
inline void RpcCall::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.service)
}
#if LANG_CXX11
inline void RpcCall::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.service)
}
#endif
inline void RpcCall::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.service)
}
inline void RpcCall::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.service)
}
inline ::std::string* RpcCall::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcCall::release_service() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcCall::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.service)
}

// string method = 2;
inline void RpcCall::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcCall::method() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.method)
  return method_.GetNoArena();
}
inline void RpcCall::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.method)
}
#if LANG_CXX11
inline void RpcCall::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.method)
}
#endif
inline void RpcCall::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.method)
}
inline void RpcCall::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.method)
}
inline ::std::string* RpcCall::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcCall::release_method() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcCall::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.method)
}

// uint64 object_id = 3;
inline void RpcCall::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RpcCall::object_id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.object_id)
  return object_id_;
}
inline void RpcCall::set_object_id(::google::protobuf::uint64 value) {
  
  object_id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.object_id)
}

// bytes call_data = 4;
inline void RpcCall::clear_call_data() {
  call_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcCall::call_data() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.call_data)
  return call_data_.GetNoArena();
}
inline void RpcCall::set_call_data(const ::std::string& value) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.call_data)
}
#if LANG_CXX11
inline void RpcCall::set_call_data(::std::string&& value) {
  
  call_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.call_data)
}
#endif
inline void RpcCall::set_call_data(const char* value) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.call_data)
}
inline void RpcCall::set_call_data(const void* value, size_t size) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.call_data)
}
inline ::std::string* RpcCall::mutable_call_data() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.call_data)
  return call_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcCall::release_call_data() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.call_data)
  
  return call_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcCall::set_allocated_call_data(::std::string* call_data) {
  if (call_data != NULL) {
    
  } else {
    
  }
  call_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_data);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.call_data)
}

// -------------------------------------------------------------------

// RpcResult

// .nanorpc.RpcStatus status = 1;
inline void RpcResult::clear_status() {
  status_ = 0;
}
inline ::nanorpc::RpcStatus RpcResult::status() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.status)
  return static_cast< ::nanorpc::RpcStatus >(status_);
}
inline void RpcResult::set_status(::nanorpc::RpcStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.status)
}

// string error_message = 2;
inline void RpcResult::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcResult::error_message() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.error_message)
  return error_message_.GetNoArena();
}
inline void RpcResult::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.error_message)
}
#if LANG_CXX11
inline void RpcResult::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcResult.error_message)
}
#endif
inline void RpcResult::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcResult.error_message)
}
inline void RpcResult::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcResult.error_message)
}
inline ::std::string* RpcResult::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcResult.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcResult::release_error_message() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcResult.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcResult::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcResult.error_message)
}

// bytes result_data = 3;
inline void RpcResult::clear_result_data() {
  result_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcResult::result_data() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.result_data)
  return result_data_.GetNoArena();
}
inline void RpcResult::set_result_data(const ::std::string& value) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.result_data)
}
#if LANG_CXX11
inline void RpcResult::set_result_data(::std::string&& value) {
  
  result_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcResult.result_data)
}
#endif
inline void RpcResult::set_result_data(const char* value) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcResult.result_data)
}
inline void RpcResult::set_result_data(const void* value, size_t size) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcResult.result_data)
}
inline ::std::string* RpcResult::mutable_result_data() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcResult.result_data)
  return result_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcResult::release_result_data() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcResult.result_data)
  
  return result_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcResult::set_allocated_result_data(::std::string* result_data) {
  if (result_data != NULL) {
    
  } else {
    
  }
  result_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_data);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcResult.result_data)
}

// -------------------------------------------------------------------

// RpcMessage

// uint32 id = 1;
inline void RpcMessage::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RpcMessage::id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.id)
  return id_;
}
inline void RpcMessage::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcMessage.id)
}

// .nanorpc.RpcCall call = 2;
inline bool RpcMessage::has_call() const {
  return this != internal_default_instance() && call_ != NULL;
}
inline void RpcMessage::clear_call() {
  if (GetArenaNoVirtual() == NULL && call_ != NULL) delete call_;
  call_ = NULL;
}
inline const ::nanorpc::RpcCall& RpcMessage::call() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.call)
  return call_ != NULL ? *call_
                         : *::nanorpc::RpcCall::internal_default_instance();
}
inline ::nanorpc::RpcCall* RpcMessage::mutable_call() {
  
  if (call_ == NULL) {
    call_ = new ::nanorpc::RpcCall;
  }
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcMessage.call)
  return call_;
}
inline ::nanorpc::RpcCall* RpcMessage::release_call() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcMessage.call)
  
  ::nanorpc::RpcCall* temp = call_;
  call_ = NULL;
  return temp;
}
inline void RpcMessage::set_allocated_call(::nanorpc::RpcCall* call) {
  delete call_;
  call_ = call;
  if (call) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcMessage.call)
}

// .nanorpc.RpcResult result = 3;
inline bool RpcMessage::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void RpcMessage::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::nanorpc::RpcResult& RpcMessage::result() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.result)
  return result_ != NULL ? *result_
                         : *::nanorpc::RpcResult::internal_default_instance();
}
inline ::nanorpc::RpcResult* RpcMessage::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::nanorpc::RpcResult;
  }
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcMessage.result)
  return result_;
}
inline ::nanorpc::RpcResult* RpcMessage::release_result() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcMessage.result)
  
  ::nanorpc::RpcResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void RpcMessage::set_allocated_result(::nanorpc::RpcResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcMessage.result)
}

// -------------------------------------------------------------------

// WideStringValue

// string value = 1;
inline void WideStringValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WideStringValue::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.WideStringValue.value)
  return value_.GetNoArena();
}
inline void WideStringValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.WideStringValue.value)
}
#if LANG_CXX11
inline void WideStringValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.WideStringValue.value)
}
#endif
inline void WideStringValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.WideStringValue.value)
}
inline void WideStringValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.WideStringValue.value)
}
inline ::std::string* WideStringValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.WideStringValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WideStringValue::release_value() {
  // @@protoc_insertion_point(field_release:nanorpc.WideStringValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WideStringValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.WideStringValue.value)
}

// -------------------------------------------------------------------

// SInt32Value

// sint32 value = 1;
inline void SInt32Value::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SInt32Value::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.SInt32Value.value)
  return value_;
}
inline void SInt32Value::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.SInt32Value.value)
}

// -------------------------------------------------------------------

// SInt64Value

// sint64 value = 1;
inline void SInt64Value::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SInt64Value::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.SInt64Value.value)
  return value_;
}
inline void SInt64Value::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.SInt64Value.value)
}

// -------------------------------------------------------------------

// RpcObject

// uint64 object_id = 1;
inline void RpcObject::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RpcObject::object_id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcObject.object_id)
  return object_id_;
}
inline void RpcObject::set_object_id(::google::protobuf::uint64 value) {
  
  object_id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcObject.object_id)
}

// -------------------------------------------------------------------

// RpcEvent

// string event_name = 1;
inline void RpcEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcEvent::event_name() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcEvent.event_name)
  return event_name_.GetNoArena();
}
inline void RpcEvent::set_event_name(const ::std::string& value) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcEvent.event_name)
}
#if LANG_CXX11
inline void RpcEvent::set_event_name(::std::string&& value) {
  
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcEvent.event_name)
}
#endif
inline void RpcEvent::set_event_name(const char* value) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcEvent.event_name)
}
inline void RpcEvent::set_event_name(const char* value, size_t size) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcEvent.event_name)
}
inline ::std::string* RpcEvent::mutable_event_name() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcEvent::release_event_name() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcEvent.event_name)
  
  return event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    
  } else {
    
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcEvent.event_name)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace nanorpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::nanorpc::RpcStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nanorpc::RpcStatus>() {
  return ::nanorpc::RpcStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nanorpc_2frpc_5ftypes_2eproto__INCLUDED
