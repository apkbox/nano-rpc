// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nanorpc/rpc_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nanorpc/rpc_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace nanorpc {
class RpcCallDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RpcCall> {
} _RpcCall_default_instance_;
class RpcResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RpcResult> {
} _RpcResult_default_instance_;
class RpcMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RpcMessage> {
} _RpcMessage_default_instance_;
class WideStringValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WideStringValue> {
} _WideStringValue_default_instance_;
class SInt32ValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SInt32Value> {
} _SInt32Value_default_instance_;
class SInt64ValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SInt64Value> {
} _SInt64Value_default_instance_;
class RpcObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RpcObject> {
} _RpcObject_default_instance_;
class RpcEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RpcEvent> {
} _RpcEvent_default_instance_;

namespace protobuf_nanorpc_2frpc_5ftypes_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, call_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, result_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, call_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WideStringValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WideStringValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SInt32Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SInt32Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SInt64Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SInt64Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcObject, object_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcEvent, event_name_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RpcCall)},
  { 8, -1, sizeof(RpcResult)},
  { 15, -1, sizeof(RpcMessage)},
  { 22, -1, sizeof(WideStringValue)},
  { 27, -1, sizeof(SInt32Value)},
  { 32, -1, sizeof(SInt64Value)},
  { 37, -1, sizeof(RpcObject)},
  { 42, -1, sizeof(RpcEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WideStringValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SInt32Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SInt64Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcEvent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "nanorpc/rpc_types.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _RpcCall_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RpcResult_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RpcMessage_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _WideStringValue_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SInt32Value_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SInt64Value_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RpcObject_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RpcEvent_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::InitDefaults();
  _RpcCall_default_instance_.DefaultConstruct();
  _RpcResult_default_instance_.DefaultConstruct();
  _RpcMessage_default_instance_.DefaultConstruct();
  _WideStringValue_default_instance_.DefaultConstruct();
  _SInt32Value_default_instance_.DefaultConstruct();
  _SInt64Value_default_instance_.DefaultConstruct();
  _RpcObject_default_instance_.DefaultConstruct();
  _RpcEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::MessageOptions::internal_default_instance(),
    90001, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::MessageOptions::internal_default_instance(),
    90002, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::ServiceOptions::internal_default_instance(),
    90301, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::MethodOptions::internal_default_instance(),
    90401, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::MethodOptions::internal_default_instance(),
    90402, 8, false, false);
  _RpcMessage_default_instance_.get_mutable()->call_ = const_cast< ::nanorpc::RpcCall*>(
      ::nanorpc::RpcCall::internal_default_instance());
  _RpcMessage_default_instance_.get_mutable()->result_ = const_cast< ::nanorpc::RpcResult*>(
      ::nanorpc::RpcResult::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027nanorpc/rpc_types.proto\022\007nanorpc\032 goog"
      "le/protobuf/descriptor.proto\"P\n\007RpcCall\022"
      "\017\n\007service\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\022\021\n\tobje"
      "ct_id\030\003 \001(\004\022\021\n\tcall_data\030\004 \001(\014\"[\n\tRpcRes"
      "ult\022\"\n\006status\030\001 \001(\0162\022.nanorpc.RpcStatus\022"
      "\025\n\rerror_message\030\002 \001(\t\022\023\n\013result_data\030\003 "
      "\001(\014\"\\\n\nRpcMessage\022\n\n\002id\030\001 \001(\r\022\036\n\004call\030\002 "
      "\001(\0132\020.nanorpc.RpcCall\022\"\n\006result\030\003 \001(\0132\022."
      "nanorpc.RpcResult\" \n\017WideStringValue\022\r\n\005"
      "value\030\001 \001(\t\"\034\n\013SInt32Value\022\r\n\005value\030\001 \001("
      "\021\"\034\n\013SInt64Value\022\r\n\005value\030\001 \001(\022\"\036\n\tRpcOb"
      "ject\022\021\n\tobject_id\030\001 \001(\004\"\036\n\010RpcEvent\022\022\n\ne"
      "vent_name\030\001 \001(\t*\226\001\n\tRpcStatus\022\020\n\014RpcSucc"
      "eeded\020\000\022\025\n\021RpcChannelFailure\020\001\022\024\n\020RpcUnk"
      "nownMethod\020\002\022\024\n\020RpcProtocolError\020\003\022\027\n\023Rp"
      "cUnknownInterface\020\004\022\033\n\027RpcInvalidCallPar"
      "ameter\020\005:>\n\023expand_as_arguments\022\037.google"
      ".protobuf.MessageOptions\030\221\277\005 \001(\010:7\n\014enum"
      "_wrapper\022\037.google.protobuf.MessageOption"
      "s\030\222\277\005 \001(\010:7\n\014event_source\022\037.google.proto"
      "buf.ServiceOptions\030\275\301\005 \001(\010:5\n\013is_propert"
      "y\022\036.google.protobuf.MethodOptions\030\241\302\005 \001("
      "\010:/\n\005async\022\036.google.protobuf.MethodOptio"
      "ns\030\242\302\005 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 938);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nanorpc/rpc_types.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_nanorpc_2frpc_5ftypes_2eproto

const ::google::protobuf::EnumDescriptor* RpcStatus_descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_enum_descriptors[0];
}
bool RpcStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcCall::kServiceFieldNumber;
const int RpcCall::kMethodFieldNumber;
const int RpcCall::kObjectIdFieldNumber;
const int RpcCall::kCallDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcCall::RpcCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.RpcCall)
}
RpcCall::RpcCall(const RpcCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  call_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.call_data().size() > 0) {
    call_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_data_);
  }
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.RpcCall)
}

void RpcCall::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RpcCall::~RpcCall() {
  // @@protoc_insertion_point(destructor:nanorpc.RpcCall)
  SharedDtor();
}

void RpcCall::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcCall::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[0].descriptor;
}

const RpcCall& RpcCall::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcCall* RpcCall::New(::google::protobuf::Arena* arena) const {
  RpcCall* n = new RpcCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcCall::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.RpcCall)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_id_ = GOOGLE_ULONGLONG(0);
}

bool RpcCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.RpcCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nanorpc.RpcCall.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nanorpc.RpcCall.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 object_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes call_data = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_call_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.RpcCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.RpcCall)
  return false;
#undef DO_
}

void RpcCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.RpcCall)
  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcCall.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcCall.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // uint64 object_id = 3;
  if (this->object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->object_id(), output);
  }

  // bytes call_data = 4;
  if (this->call_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->call_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.RpcCall)
}

::google::protobuf::uint8* RpcCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.RpcCall)
  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcCall.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcCall.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // uint64 object_id = 3;
  if (this->object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->object_id(), target);
  }

  // bytes call_data = 4;
  if (this->call_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->call_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.RpcCall)
  return target;
}

size_t RpcCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.RpcCall)
  size_t total_size = 0;

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // bytes call_data = 4;
  if (this->call_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->call_data());
  }

  // uint64 object_id = 3;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.RpcCall)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.RpcCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.RpcCall)
    MergeFrom(*source);
  }
}

void RpcCall::MergeFrom(const RpcCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.RpcCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.call_data().size() > 0) {

    call_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_data_);
  }
  if (from.object_id() != 0) {
    set_object_id(from.object_id());
  }
}

void RpcCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.RpcCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcCall::CopyFrom(const RpcCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.RpcCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcCall::IsInitialized() const {
  return true;
}

void RpcCall::Swap(RpcCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcCall::InternalSwap(RpcCall* other) {
  service_.Swap(&other->service_);
  method_.Swap(&other->method_);
  call_data_.Swap(&other->call_data_);
  std::swap(object_id_, other->object_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcCall::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcCall

// string service = 1;
void RpcCall::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcCall::service() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.service)
  return service_.GetNoArena();
}
void RpcCall::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.service)
}
#if LANG_CXX11
void RpcCall::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.service)
}
#endif
void RpcCall::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.service)
}
void RpcCall::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.service)
}
::std::string* RpcCall::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcCall::release_service() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcCall::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.service)
}

// string method = 2;
void RpcCall::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcCall::method() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.method)
  return method_.GetNoArena();
}
void RpcCall::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.method)
}
#if LANG_CXX11
void RpcCall::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.method)
}
#endif
void RpcCall::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.method)
}
void RpcCall::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.method)
}
::std::string* RpcCall::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcCall::release_method() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcCall::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.method)
}

// uint64 object_id = 3;
void RpcCall::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RpcCall::object_id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.object_id)
  return object_id_;
}
void RpcCall::set_object_id(::google::protobuf::uint64 value) {
  
  object_id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.object_id)
}

// bytes call_data = 4;
void RpcCall::clear_call_data() {
  call_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcCall::call_data() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcCall.call_data)
  return call_data_.GetNoArena();
}
void RpcCall::set_call_data(const ::std::string& value) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcCall.call_data)
}
#if LANG_CXX11
void RpcCall::set_call_data(::std::string&& value) {
  
  call_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcCall.call_data)
}
#endif
void RpcCall::set_call_data(const char* value) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcCall.call_data)
}
void RpcCall::set_call_data(const void* value, size_t size) {
  
  call_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcCall.call_data)
}
::std::string* RpcCall::mutable_call_data() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcCall.call_data)
  return call_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcCall::release_call_data() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcCall.call_data)
  
  return call_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcCall::set_allocated_call_data(::std::string* call_data) {
  if (call_data != NULL) {
    
  } else {
    
  }
  call_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_data);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcCall.call_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcResult::kStatusFieldNumber;
const int RpcResult::kErrorMessageFieldNumber;
const int RpcResult::kResultDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcResult::RpcResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.RpcResult)
}
RpcResult::RpcResult(const RpcResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  result_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_data().size() > 0) {
    result_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_data_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.RpcResult)
}

void RpcResult::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _cached_size_ = 0;
}

RpcResult::~RpcResult() {
  // @@protoc_insertion_point(destructor:nanorpc.RpcResult)
  SharedDtor();
}

void RpcResult::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcResult::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[1].descriptor;
}

const RpcResult& RpcResult::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcResult* RpcResult::New(::google::protobuf::Arena* arena) const {
  RpcResult* n = new RpcResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcResult::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.RpcResult)
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

bool RpcResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.RpcResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .nanorpc.RpcStatus status = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::nanorpc::RpcStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nanorpc.RpcResult.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes result_data = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.RpcResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.RpcResult)
  return false;
#undef DO_
}

void RpcResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.RpcResult)
  // .nanorpc.RpcStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcResult.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // bytes result_data = 3;
  if (this->result_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->result_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.RpcResult)
}

::google::protobuf::uint8* RpcResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.RpcResult)
  // .nanorpc.RpcStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcResult.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // bytes result_data = 3;
  if (this->result_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->result_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.RpcResult)
  return target;
}

size_t RpcResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.RpcResult)
  size_t total_size = 0;

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // bytes result_data = 3;
  if (this->result_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result_data());
  }

  // .nanorpc.RpcStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.RpcResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.RpcResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.RpcResult)
    MergeFrom(*source);
  }
}

void RpcResult::MergeFrom(const RpcResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.RpcResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.result_data().size() > 0) {

    result_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_data_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RpcResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.RpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcResult::CopyFrom(const RpcResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.RpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcResult::IsInitialized() const {
  return true;
}

void RpcResult::Swap(RpcResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcResult::InternalSwap(RpcResult* other) {
  error_message_.Swap(&other->error_message_);
  result_data_.Swap(&other->result_data_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcResult::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcResult

// .nanorpc.RpcStatus status = 1;
void RpcResult::clear_status() {
  status_ = 0;
}
::nanorpc::RpcStatus RpcResult::status() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.status)
  return static_cast< ::nanorpc::RpcStatus >(status_);
}
void RpcResult::set_status(::nanorpc::RpcStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.status)
}

// string error_message = 2;
void RpcResult::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcResult::error_message() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.error_message)
  return error_message_.GetNoArena();
}
void RpcResult::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.error_message)
}
#if LANG_CXX11
void RpcResult::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcResult.error_message)
}
#endif
void RpcResult::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcResult.error_message)
}
void RpcResult::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcResult.error_message)
}
::std::string* RpcResult::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcResult.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcResult::release_error_message() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcResult.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcResult::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcResult.error_message)
}

// bytes result_data = 3;
void RpcResult::clear_result_data() {
  result_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcResult::result_data() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcResult.result_data)
  return result_data_.GetNoArena();
}
void RpcResult::set_result_data(const ::std::string& value) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcResult.result_data)
}
#if LANG_CXX11
void RpcResult::set_result_data(::std::string&& value) {
  
  result_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcResult.result_data)
}
#endif
void RpcResult::set_result_data(const char* value) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcResult.result_data)
}
void RpcResult::set_result_data(const void* value, size_t size) {
  
  result_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcResult.result_data)
}
::std::string* RpcResult::mutable_result_data() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcResult.result_data)
  return result_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcResult::release_result_data() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcResult.result_data)
  
  return result_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcResult::set_allocated_result_data(::std::string* result_data) {
  if (result_data != NULL) {
    
  } else {
    
  }
  result_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_data);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcResult.result_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcMessage::kIdFieldNumber;
const int RpcMessage::kCallFieldNumber;
const int RpcMessage::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcMessage::RpcMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.RpcMessage)
}
RpcMessage::RpcMessage(const RpcMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_call()) {
    call_ = new ::nanorpc::RpcCall(*from.call_);
  } else {
    call_ = NULL;
  }
  if (from.has_result()) {
    result_ = new ::nanorpc::RpcResult(*from.result_);
  } else {
    result_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.RpcMessage)
}

void RpcMessage::SharedCtor() {
  ::memset(&call_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&call_) + sizeof(id_));
  _cached_size_ = 0;
}

RpcMessage::~RpcMessage() {
  // @@protoc_insertion_point(destructor:nanorpc.RpcMessage)
  SharedDtor();
}

void RpcMessage::SharedDtor() {
  if (this != internal_default_instance()) {
    delete call_;
  }
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void RpcMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcMessage::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[2].descriptor;
}

const RpcMessage& RpcMessage::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcMessage* RpcMessage::New(::google::protobuf::Arena* arena) const {
  RpcMessage* n = new RpcMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.RpcMessage)
  if (GetArenaNoVirtual() == NULL && call_ != NULL) {
    delete call_;
  }
  call_ = NULL;
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  id_ = 0u;
}

bool RpcMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.RpcMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nanorpc.RpcCall call = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_call()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nanorpc.RpcResult result = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.RpcMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.RpcMessage)
  return false;
#undef DO_
}

void RpcMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.RpcMessage)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .nanorpc.RpcCall call = 2;
  if (this->has_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->call_, output);
  }

  // .nanorpc.RpcResult result = 3;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->result_, output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.RpcMessage)
}

::google::protobuf::uint8* RpcMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.RpcMessage)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .nanorpc.RpcCall call = 2;
  if (this->has_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->call_, false, target);
  }

  // .nanorpc.RpcResult result = 3;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->result_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.RpcMessage)
  return target;
}

size_t RpcMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.RpcMessage)
  size_t total_size = 0;

  // .nanorpc.RpcCall call = 2;
  if (this->has_call()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->call_);
  }

  // .nanorpc.RpcResult result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.RpcMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.RpcMessage)
    MergeFrom(*source);
  }
}

void RpcMessage::MergeFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_call()) {
    mutable_call()->::nanorpc::RpcCall::MergeFrom(from.call());
  }
  if (from.has_result()) {
    mutable_result()->::nanorpc::RpcResult::MergeFrom(from.result());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RpcMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcMessage::CopyFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcMessage::IsInitialized() const {
  return true;
}

void RpcMessage::Swap(RpcMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcMessage::InternalSwap(RpcMessage* other) {
  std::swap(call_, other->call_);
  std::swap(result_, other->result_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcMessage::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcMessage

// uint32 id = 1;
void RpcMessage::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 RpcMessage::id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.id)
  return id_;
}
void RpcMessage::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcMessage.id)
}

// .nanorpc.RpcCall call = 2;
bool RpcMessage::has_call() const {
  return this != internal_default_instance() && call_ != NULL;
}
void RpcMessage::clear_call() {
  if (GetArenaNoVirtual() == NULL && call_ != NULL) delete call_;
  call_ = NULL;
}
const ::nanorpc::RpcCall& RpcMessage::call() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.call)
  return call_ != NULL ? *call_
                         : *::nanorpc::RpcCall::internal_default_instance();
}
::nanorpc::RpcCall* RpcMessage::mutable_call() {
  
  if (call_ == NULL) {
    call_ = new ::nanorpc::RpcCall;
  }
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcMessage.call)
  return call_;
}
::nanorpc::RpcCall* RpcMessage::release_call() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcMessage.call)
  
  ::nanorpc::RpcCall* temp = call_;
  call_ = NULL;
  return temp;
}
void RpcMessage::set_allocated_call(::nanorpc::RpcCall* call) {
  delete call_;
  call_ = call;
  if (call) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcMessage.call)
}

// .nanorpc.RpcResult result = 3;
bool RpcMessage::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void RpcMessage::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::nanorpc::RpcResult& RpcMessage::result() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcMessage.result)
  return result_ != NULL ? *result_
                         : *::nanorpc::RpcResult::internal_default_instance();
}
::nanorpc::RpcResult* RpcMessage::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::nanorpc::RpcResult;
  }
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcMessage.result)
  return result_;
}
::nanorpc::RpcResult* RpcMessage::release_result() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcMessage.result)
  
  ::nanorpc::RpcResult* temp = result_;
  result_ = NULL;
  return temp;
}
void RpcMessage::set_allocated_result(::nanorpc::RpcResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcMessage.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WideStringValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WideStringValue::WideStringValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.WideStringValue)
}
WideStringValue::WideStringValue(const WideStringValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:nanorpc.WideStringValue)
}

void WideStringValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WideStringValue::~WideStringValue() {
  // @@protoc_insertion_point(destructor:nanorpc.WideStringValue)
  SharedDtor();
}

void WideStringValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WideStringValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WideStringValue::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[3].descriptor;
}

const WideStringValue& WideStringValue::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

WideStringValue* WideStringValue::New(::google::protobuf::Arena* arena) const {
  WideStringValue* n = new WideStringValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WideStringValue::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.WideStringValue)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WideStringValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.WideStringValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nanorpc.WideStringValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.WideStringValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.WideStringValue)
  return false;
#undef DO_
}

void WideStringValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.WideStringValue)
  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.WideStringValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.WideStringValue)
}

::google::protobuf::uint8* WideStringValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.WideStringValue)
  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.WideStringValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.WideStringValue)
  return target;
}

size_t WideStringValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.WideStringValue)
  size_t total_size = 0;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WideStringValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.WideStringValue)
  GOOGLE_DCHECK_NE(&from, this);
  const WideStringValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WideStringValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.WideStringValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.WideStringValue)
    MergeFrom(*source);
  }
}

void WideStringValue::MergeFrom(const WideStringValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.WideStringValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void WideStringValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.WideStringValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WideStringValue::CopyFrom(const WideStringValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.WideStringValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WideStringValue::IsInitialized() const {
  return true;
}

void WideStringValue::Swap(WideStringValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WideStringValue::InternalSwap(WideStringValue* other) {
  value_.Swap(&other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WideStringValue::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WideStringValue

// string value = 1;
void WideStringValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WideStringValue::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.WideStringValue.value)
  return value_.GetNoArena();
}
void WideStringValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.WideStringValue.value)
}
#if LANG_CXX11
void WideStringValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.WideStringValue.value)
}
#endif
void WideStringValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.WideStringValue.value)
}
void WideStringValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.WideStringValue.value)
}
::std::string* WideStringValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.WideStringValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WideStringValue::release_value() {
  // @@protoc_insertion_point(field_release:nanorpc.WideStringValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WideStringValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.WideStringValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SInt32Value::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SInt32Value::SInt32Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.SInt32Value)
}
SInt32Value::SInt32Value(const SInt32Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.SInt32Value)
}

void SInt32Value::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

SInt32Value::~SInt32Value() {
  // @@protoc_insertion_point(destructor:nanorpc.SInt32Value)
  SharedDtor();
}

void SInt32Value::SharedDtor() {
}

void SInt32Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SInt32Value::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[4].descriptor;
}

const SInt32Value& SInt32Value::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

SInt32Value* SInt32Value::New(::google::protobuf::Arena* arena) const {
  SInt32Value* n = new SInt32Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SInt32Value::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.SInt32Value)
  value_ = 0;
}

bool SInt32Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.SInt32Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 value = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.SInt32Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.SInt32Value)
  return false;
#undef DO_
}

void SInt32Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.SInt32Value)
  // sint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.SInt32Value)
}

::google::protobuf::uint8* SInt32Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.SInt32Value)
  // sint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.SInt32Value)
  return target;
}

size_t SInt32Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.SInt32Value)
  size_t total_size = 0;

  // sint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SInt32Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.SInt32Value)
  GOOGLE_DCHECK_NE(&from, this);
  const SInt32Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SInt32Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.SInt32Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.SInt32Value)
    MergeFrom(*source);
  }
}

void SInt32Value::MergeFrom(const SInt32Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.SInt32Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SInt32Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.SInt32Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SInt32Value::CopyFrom(const SInt32Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.SInt32Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SInt32Value::IsInitialized() const {
  return true;
}

void SInt32Value::Swap(SInt32Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SInt32Value::InternalSwap(SInt32Value* other) {
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SInt32Value::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SInt32Value

// sint32 value = 1;
void SInt32Value::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 SInt32Value::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.SInt32Value.value)
  return value_;
}
void SInt32Value::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.SInt32Value.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SInt64Value::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SInt64Value::SInt64Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.SInt64Value)
}
SInt64Value::SInt64Value(const SInt64Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.SInt64Value)
}

void SInt64Value::SharedCtor() {
  value_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SInt64Value::~SInt64Value() {
  // @@protoc_insertion_point(destructor:nanorpc.SInt64Value)
  SharedDtor();
}

void SInt64Value::SharedDtor() {
}

void SInt64Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SInt64Value::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[5].descriptor;
}

const SInt64Value& SInt64Value::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

SInt64Value* SInt64Value::New(::google::protobuf::Arena* arena) const {
  SInt64Value* n = new SInt64Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SInt64Value::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.SInt64Value)
  value_ = GOOGLE_LONGLONG(0);
}

bool SInt64Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.SInt64Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 value = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.SInt64Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.SInt64Value)
  return false;
#undef DO_
}

void SInt64Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.SInt64Value)
  // sint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.SInt64Value)
}

::google::protobuf::uint8* SInt64Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.SInt64Value)
  // sint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.SInt64Value)
  return target;
}

size_t SInt64Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.SInt64Value)
  size_t total_size = 0;

  // sint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SInt64Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.SInt64Value)
  GOOGLE_DCHECK_NE(&from, this);
  const SInt64Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SInt64Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.SInt64Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.SInt64Value)
    MergeFrom(*source);
  }
}

void SInt64Value::MergeFrom(const SInt64Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.SInt64Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SInt64Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.SInt64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SInt64Value::CopyFrom(const SInt64Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.SInt64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SInt64Value::IsInitialized() const {
  return true;
}

void SInt64Value::Swap(SInt64Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SInt64Value::InternalSwap(SInt64Value* other) {
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SInt64Value::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SInt64Value

// sint64 value = 1;
void SInt64Value::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SInt64Value::value() const {
  // @@protoc_insertion_point(field_get:nanorpc.SInt64Value.value)
  return value_;
}
void SInt64Value::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.SInt64Value.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcObject::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcObject::RpcObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.RpcObject)
}
RpcObject::RpcObject(const RpcObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:nanorpc.RpcObject)
}

void RpcObject::SharedCtor() {
  object_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RpcObject::~RpcObject() {
  // @@protoc_insertion_point(destructor:nanorpc.RpcObject)
  SharedDtor();
}

void RpcObject::SharedDtor() {
}

void RpcObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcObject::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[6].descriptor;
}

const RpcObject& RpcObject::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcObject* RpcObject::New(::google::protobuf::Arena* arena) const {
  RpcObject* n = new RpcObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcObject::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.RpcObject)
  object_id_ = GOOGLE_ULONGLONG(0);
}

bool RpcObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.RpcObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 object_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.RpcObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.RpcObject)
  return false;
#undef DO_
}

void RpcObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.RpcObject)
  // uint64 object_id = 1;
  if (this->object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->object_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.RpcObject)
}

::google::protobuf::uint8* RpcObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.RpcObject)
  // uint64 object_id = 1;
  if (this->object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->object_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.RpcObject)
  return target;
}

size_t RpcObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.RpcObject)
  size_t total_size = 0;

  // uint64 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.RpcObject)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.RpcObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.RpcObject)
    MergeFrom(*source);
  }
}

void RpcObject::MergeFrom(const RpcObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.RpcObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.object_id() != 0) {
    set_object_id(from.object_id());
  }
}

void RpcObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.RpcObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcObject::CopyFrom(const RpcObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.RpcObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcObject::IsInitialized() const {
  return true;
}

void RpcObject::Swap(RpcObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcObject::InternalSwap(RpcObject* other) {
  std::swap(object_id_, other->object_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcObject::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcObject

// uint64 object_id = 1;
void RpcObject::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RpcObject::object_id() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcObject.object_id)
  return object_id_;
}
void RpcObject::set_object_id(::google::protobuf::uint64 value) {
  
  object_id_ = value;
  // @@protoc_insertion_point(field_set:nanorpc.RpcObject.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcEvent::kEventNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcEvent::RpcEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nanorpc.RpcEvent)
}
RpcEvent::RpcEvent(const RpcEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_name().size() > 0) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  // @@protoc_insertion_point(copy_constructor:nanorpc.RpcEvent)
}

void RpcEvent::SharedCtor() {
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RpcEvent::~RpcEvent() {
  // @@protoc_insertion_point(destructor:nanorpc.RpcEvent)
  SharedDtor();
}

void RpcEvent::SharedDtor() {
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcEvent::descriptor() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[7].descriptor;
}

const RpcEvent& RpcEvent::default_instance() {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcEvent* RpcEvent::New(::google::protobuf::Arena* arena) const {
  RpcEvent* n = new RpcEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:nanorpc.RpcEvent)
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RpcEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nanorpc.RpcEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_name().data(), this->event_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nanorpc.RpcEvent.event_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nanorpc.RpcEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nanorpc.RpcEvent)
  return false;
#undef DO_
}

void RpcEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nanorpc.RpcEvent)
  // string event_name = 1;
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:nanorpc.RpcEvent)
}

::google::protobuf::uint8* RpcEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nanorpc.RpcEvent)
  // string event_name = 1;
  if (this->event_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nanorpc.RpcEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:nanorpc.RpcEvent)
  return target;
}

size_t RpcEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nanorpc.RpcEvent)
  size_t total_size = 0;

  // string event_name = 1;
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nanorpc.RpcEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nanorpc.RpcEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nanorpc.RpcEvent)
    MergeFrom(*source);
  }
}

void RpcEvent::MergeFrom(const RpcEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nanorpc.RpcEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.event_name().size() > 0) {

    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
}

void RpcEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nanorpc.RpcEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcEvent::CopyFrom(const RpcEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nanorpc.RpcEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcEvent::IsInitialized() const {
  return true;
}

void RpcEvent::Swap(RpcEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcEvent::InternalSwap(RpcEvent* other) {
  event_name_.Swap(&other->event_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcEvent::GetMetadata() const {
  protobuf_nanorpc_2frpc_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nanorpc_2frpc_5ftypes_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcEvent

// string event_name = 1;
void RpcEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcEvent::event_name() const {
  // @@protoc_insertion_point(field_get:nanorpc.RpcEvent.event_name)
  return event_name_.GetNoArena();
}
void RpcEvent::set_event_name(const ::std::string& value) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nanorpc.RpcEvent.event_name)
}
#if LANG_CXX11
void RpcEvent::set_event_name(::std::string&& value) {
  
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nanorpc.RpcEvent.event_name)
}
#endif
void RpcEvent::set_event_name(const char* value) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nanorpc.RpcEvent.event_name)
}
void RpcEvent::set_event_name(const char* value, size_t size) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nanorpc.RpcEvent.event_name)
}
::std::string* RpcEvent::mutable_event_name() {
  
  // @@protoc_insertion_point(field_mutable:nanorpc.RpcEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcEvent::release_event_name() {
  // @@protoc_insertion_point(field_release:nanorpc.RpcEvent.event_name)
  
  return event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    
  } else {
    
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:nanorpc.RpcEvent.event_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  expand_as_arguments(kExpandAsArgumentsFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  enum_wrapper(kEnumWrapperFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  event_source(kEventSourceFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  is_property(kIsPropertyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  async(kAsyncFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

}  // namespace nanorpc

// @@protoc_insertion_point(global_scope)
