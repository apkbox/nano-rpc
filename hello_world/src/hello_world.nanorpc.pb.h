// Generated by the nanorpc protobuf plugin.
// If you make any local change, they will be lost.
// source: hello_world.proto
#ifndef NANORPC_hello_5fworld_2eproto__INCLUDED
#define NANORPC_hello_5fworld_2eproto__INCLUDED

#include "hello_world.pb.h"
#include "nanorpc/nanorpc2.h"

namespace hello_world {

class OrderDeskEvents {
public:
  virtual ~OrderDeskEvents() {}

  virtual void OrderStatusChanged(uint32_t order, bool is_ready, bool reading_taken, bool drink_taken) = 0;
};

class OrderDesk {
public:
  virtual ~OrderDesk() {}

  virtual int32_t CreateOrder(DrinkType drink, ReadingType reading) = 0;
  virtual bool IsOrderReady(int32_t value) = 0;
  virtual DrinkType GetDrink(int32_t value) = 0;
  virtual ReadingType GetReading(int32_t value) = 0;
};

class OrderDeskEvents_Stub : public nanorpc::ServiceInterface {
public:
  explicit OrderDeskEvents_Stub(OrderDeskEvents* impl, nanorpc::ObjectManagerInterface* object_manager)
      : impl_(impl), object_manager_(object_manager) {}

  const std::string &GetInterfaceName() const override;
  bool CallMethod(const nanorpc::RpcCall &rpc_call, nanorpc::RpcResult *rpc_result) override;

private:
  static const std::string kServiceName;

  OrderDeskEvents* impl_;
  nanorpc::ObjectManagerInterface* object_manager_;
};

class OrderDesk_Stub : public nanorpc::ServiceInterface {
public:
  explicit OrderDesk_Stub(OrderDesk* impl, nanorpc::ObjectManagerInterface* object_manager)
      : impl_(impl), object_manager_(object_manager) {}

  const std::string &GetInterfaceName() const override;
  bool CallMethod(const nanorpc::RpcCall &rpc_call, nanorpc::RpcResult *rpc_result) override;

private:
  static const std::string kServiceName;

  OrderDesk* impl_;
  nanorpc::ObjectManagerInterface* object_manager_;
};

class OrderDeskEvents_EventProxy : public OrderDeskEvents {
public:
  explicit OrderDeskEvents_EventProxy(nanorpc::EventSourceInterface *event_source)
      : event_source_(event_source) {}

  virtual ~OrderDeskEvents_EventProxy() {}

  void OrderStatusChanged(uint32_t order, bool is_ready, bool reading_taken, bool drink_taken) override;

private:
  nanorpc::EventSourceInterface *event_source_;
};

class OrderDesk_Proxy : public OrderDesk {
public:
  explicit OrderDesk_Proxy(nanorpc::ServiceProxyInterface *client, nanorpc::RpcObjectId object_id = 0)
      : client_(client), object_id_(object_id) {}

  virtual ~OrderDesk_Proxy();

  int32_t CreateOrder(DrinkType drink, ReadingType reading) override;
  bool IsOrderReady(int32_t value) override;
  DrinkType GetDrink(int32_t value) override;
  ReadingType GetReading(int32_t value) override;

private:
  nanorpc::ServiceProxyInterface *client_;
  nanorpc::RpcObjectId object_id_;
};

}  // namespace hello_world


#endif  // NANORPC_hello_5fworld_2eproto__INCLUDED
