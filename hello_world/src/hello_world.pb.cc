// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello_world.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hello_world.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hello_world {

namespace {

const ::google::protobuf::Descriptor* OrderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DrinkType_wrapper___descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DrinkType_wrapper___reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadingType_wrapper___descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadingType_wrapper___reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DrinkType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReadingType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_hello_5fworld_2eproto() {
  protobuf_AddDesc_hello_5fworld_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hello_world.proto");
  GOOGLE_CHECK(file != NULL);
  OrderRequest_descriptor_ = file->message_type(0);
  static const int OrderRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderRequest, drink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderRequest, reading_),
  };
  OrderRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderRequest_descriptor_,
      OrderRequest::default_instance_,
      OrderRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(OrderRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderRequest, _is_default_instance_));
  DrinkType_wrapper___descriptor_ = file->message_type(1);
  static const int DrinkType_wrapper___offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DrinkType_wrapper__, value_),
  };
  DrinkType_wrapper___reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DrinkType_wrapper___descriptor_,
      DrinkType_wrapper__::default_instance_,
      DrinkType_wrapper___offsets_,
      -1,
      -1,
      -1,
      sizeof(DrinkType_wrapper__),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DrinkType_wrapper__, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DrinkType_wrapper__, _is_default_instance_));
  ReadingType_wrapper___descriptor_ = file->message_type(2);
  static const int ReadingType_wrapper___offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadingType_wrapper__, value_),
  };
  ReadingType_wrapper___reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadingType_wrapper___descriptor_,
      ReadingType_wrapper__::default_instance_,
      ReadingType_wrapper___offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadingType_wrapper__),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadingType_wrapper__, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadingType_wrapper__, _is_default_instance_));
  DrinkType_descriptor_ = file->enum_type(0);
  ReadingType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hello_5fworld_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderRequest_descriptor_, &OrderRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DrinkType_wrapper___descriptor_, &DrinkType_wrapper__::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadingType_wrapper___descriptor_, &ReadingType_wrapper__::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hello_5fworld_2eproto() {
  delete OrderRequest::default_instance_;
  delete OrderRequest_reflection_;
  delete DrinkType_wrapper__::default_instance_;
  delete DrinkType_wrapper___reflection_;
  delete ReadingType_wrapper__::default_instance_;
  delete ReadingType_wrapper___reflection_;
}

void protobuf_AddDesc_hello_5fworld_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::nanorpc::protobuf_AddDesc_nanorpc_2frpc_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021hello_world.proto\022\013hello_world\032\036google"
    "/protobuf/wrappers.proto\032\027nanorpc/rpc_ty"
    "pes.proto\"f\n\014OrderRequest\022%\n\005drink\030\002 \001(\016"
    "2\026.hello_world.DrinkType\022)\n\007reading\030\003 \001("
    "\0162\030.hello_world.ReadingType:\004\210\371+\001\"B\n\023Dri"
    "nkType_wrapper__\022%\n\005value\030\001 \001(\0162\026.hello_"
    "world.DrinkType:\004\220\371+\001\"F\n\025ReadingType_wra"
    "pper__\022\'\n\005value\030\001 \001(\0162\030.hello_world.Read"
    "ingType:\004\220\371+\001*C\n\tDrinkType\022\013\n\007NoDrink\020\000\022"
    "\n\n\006Coffee\020\001\022\007\n\003Tea\020\002\022\t\n\005Water\020\003\022\t\n\005Juice"
    "\020\004*9\n\013ReadingType\022\r\n\tNoReading\020\000\022\r\n\tNews"
    "paper\020\001\022\014\n\010Magazine\020\0022\265\002\n\tOrderDesk\022E\n\013C"
    "reateOrder\022\031.hello_world.OrderRequest\032\033."
    "google.protobuf.Int32Value\022G\n\014IsOrderRea"
    "dy\022\033.google.protobuf.Int32Value\032\032.google"
    ".protobuf.BoolValue\022I\n\010GetDrink\022\033.google"
    ".protobuf.Int32Value\032 .hello_world.Drink"
    "Type_wrapper__\022M\n\nGetReading\022\033.google.pr"
    "otobuf.Int32Value\032\".hello_world.ReadingT"
    "ype_wrapper__b\006proto3", 781);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hello_world.proto", &protobuf_RegisterTypes);
  OrderRequest::default_instance_ = new OrderRequest();
  DrinkType_wrapper__::default_instance_ = new DrinkType_wrapper__();
  ReadingType_wrapper__::default_instance_ = new ReadingType_wrapper__();
  OrderRequest::default_instance_->InitAsDefaultInstance();
  DrinkType_wrapper__::default_instance_->InitAsDefaultInstance();
  ReadingType_wrapper__::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hello_5fworld_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hello_5fworld_2eproto {
  StaticDescriptorInitializer_hello_5fworld_2eproto() {
    protobuf_AddDesc_hello_5fworld_2eproto();
  }
} static_descriptor_initializer_hello_5fworld_2eproto_;
const ::google::protobuf::EnumDescriptor* DrinkType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DrinkType_descriptor_;
}
bool DrinkType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReadingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadingType_descriptor_;
}
bool ReadingType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderRequest::kDrinkFieldNumber;
const int OrderRequest::kReadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderRequest::OrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hello_world.OrderRequest)
}

void OrderRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OrderRequest::OrderRequest(const OrderRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hello_world.OrderRequest)
}

void OrderRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  drink_ = 0;
  reading_ = 0;
}

OrderRequest::~OrderRequest() {
  // @@protoc_insertion_point(destructor:hello_world.OrderRequest)
  SharedDtor();
}

void OrderRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderRequest_descriptor_;
}

const OrderRequest& OrderRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hello_5fworld_2eproto();
  return *default_instance_;
}

OrderRequest* OrderRequest::default_instance_ = NULL;

OrderRequest* OrderRequest::New(::google::protobuf::Arena* arena) const {
  OrderRequest* n = new OrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hello_world.OrderRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OrderRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OrderRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(drink_, reading_);

#undef ZR_HELPER_
#undef ZR_

}

bool OrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hello_world.OrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hello_world.DrinkType drink = 2;
      case 2: {
        if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_drink(static_cast< ::hello_world::DrinkType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_reading;
        break;
      }

      // optional .hello_world.ReadingType reading = 3;
      case 3: {
        if (tag == 24) {
         parse_reading:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reading(static_cast< ::hello_world::ReadingType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hello_world.OrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hello_world.OrderRequest)
  return false;
#undef DO_
}

void OrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hello_world.OrderRequest)
  // optional .hello_world.DrinkType drink = 2;
  if (this->drink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->drink(), output);
  }

  // optional .hello_world.ReadingType reading = 3;
  if (this->reading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reading(), output);
  }

  // @@protoc_insertion_point(serialize_end:hello_world.OrderRequest)
}

::google::protobuf::uint8* OrderRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hello_world.OrderRequest)
  // optional .hello_world.DrinkType drink = 2;
  if (this->drink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->drink(), target);
  }

  // optional .hello_world.ReadingType reading = 3;
  if (this->reading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reading(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hello_world.OrderRequest)
  return target;
}

int OrderRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:hello_world.OrderRequest)
  int total_size = 0;

  // optional .hello_world.DrinkType drink = 2;
  if (this->drink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->drink());
  }

  // optional .hello_world.ReadingType reading = 3;
  if (this->reading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reading());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hello_world.OrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OrderRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hello_world.OrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hello_world.OrderRequest)
    MergeFrom(*source);
  }
}

void OrderRequest::MergeFrom(const OrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hello_world.OrderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.drink() != 0) {
    set_drink(from.drink());
  }
  if (from.reading() != 0) {
    set_reading(from.reading());
  }
}

void OrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hello_world.OrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderRequest::CopyFrom(const OrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hello_world.OrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderRequest::IsInitialized() const {

  return true;
}

void OrderRequest::Swap(OrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderRequest::InternalSwap(OrderRequest* other) {
  std::swap(drink_, other->drink_);
  std::swap(reading_, other->reading_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderRequest_descriptor_;
  metadata.reflection = OrderRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderRequest

// optional .hello_world.DrinkType drink = 2;
void OrderRequest::clear_drink() {
  drink_ = 0;
}
 ::hello_world::DrinkType OrderRequest::drink() const {
  // @@protoc_insertion_point(field_get:hello_world.OrderRequest.drink)
  return static_cast< ::hello_world::DrinkType >(drink_);
}
 void OrderRequest::set_drink(::hello_world::DrinkType value) {
  
  drink_ = value;
  // @@protoc_insertion_point(field_set:hello_world.OrderRequest.drink)
}

// optional .hello_world.ReadingType reading = 3;
void OrderRequest::clear_reading() {
  reading_ = 0;
}
 ::hello_world::ReadingType OrderRequest::reading() const {
  // @@protoc_insertion_point(field_get:hello_world.OrderRequest.reading)
  return static_cast< ::hello_world::ReadingType >(reading_);
}
 void OrderRequest::set_reading(::hello_world::ReadingType value) {
  
  reading_ = value;
  // @@protoc_insertion_point(field_set:hello_world.OrderRequest.reading)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DrinkType_wrapper__::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DrinkType_wrapper__::DrinkType_wrapper__()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hello_world.DrinkType_wrapper__)
}

void DrinkType_wrapper__::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DrinkType_wrapper__::DrinkType_wrapper__(const DrinkType_wrapper__& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hello_world.DrinkType_wrapper__)
}

void DrinkType_wrapper__::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

DrinkType_wrapper__::~DrinkType_wrapper__() {
  // @@protoc_insertion_point(destructor:hello_world.DrinkType_wrapper__)
  SharedDtor();
}

void DrinkType_wrapper__::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DrinkType_wrapper__::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DrinkType_wrapper__::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DrinkType_wrapper___descriptor_;
}

const DrinkType_wrapper__& DrinkType_wrapper__::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hello_5fworld_2eproto();
  return *default_instance_;
}

DrinkType_wrapper__* DrinkType_wrapper__::default_instance_ = NULL;

DrinkType_wrapper__* DrinkType_wrapper__::New(::google::protobuf::Arena* arena) const {
  DrinkType_wrapper__* n = new DrinkType_wrapper__;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DrinkType_wrapper__::Clear() {
// @@protoc_insertion_point(message_clear_start:hello_world.DrinkType_wrapper__)
  value_ = 0;
}

bool DrinkType_wrapper__::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hello_world.DrinkType_wrapper__)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hello_world.DrinkType value = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::hello_world::DrinkType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hello_world.DrinkType_wrapper__)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hello_world.DrinkType_wrapper__)
  return false;
#undef DO_
}

void DrinkType_wrapper__::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hello_world.DrinkType_wrapper__)
  // optional .hello_world.DrinkType value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:hello_world.DrinkType_wrapper__)
}

::google::protobuf::uint8* DrinkType_wrapper__::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hello_world.DrinkType_wrapper__)
  // optional .hello_world.DrinkType value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hello_world.DrinkType_wrapper__)
  return target;
}

int DrinkType_wrapper__::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:hello_world.DrinkType_wrapper__)
  int total_size = 0;

  // optional .hello_world.DrinkType value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DrinkType_wrapper__::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hello_world.DrinkType_wrapper__)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DrinkType_wrapper__* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DrinkType_wrapper__>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hello_world.DrinkType_wrapper__)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hello_world.DrinkType_wrapper__)
    MergeFrom(*source);
  }
}

void DrinkType_wrapper__::MergeFrom(const DrinkType_wrapper__& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hello_world.DrinkType_wrapper__)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DrinkType_wrapper__::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hello_world.DrinkType_wrapper__)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrinkType_wrapper__::CopyFrom(const DrinkType_wrapper__& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hello_world.DrinkType_wrapper__)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrinkType_wrapper__::IsInitialized() const {

  return true;
}

void DrinkType_wrapper__::Swap(DrinkType_wrapper__* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DrinkType_wrapper__::InternalSwap(DrinkType_wrapper__* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DrinkType_wrapper__::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DrinkType_wrapper___descriptor_;
  metadata.reflection = DrinkType_wrapper___reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DrinkType_wrapper__

// optional .hello_world.DrinkType value = 1;
void DrinkType_wrapper__::clear_value() {
  value_ = 0;
}
 ::hello_world::DrinkType DrinkType_wrapper__::value() const {
  // @@protoc_insertion_point(field_get:hello_world.DrinkType_wrapper__.value)
  return static_cast< ::hello_world::DrinkType >(value_);
}
 void DrinkType_wrapper__::set_value(::hello_world::DrinkType value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:hello_world.DrinkType_wrapper__.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingType_wrapper__::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingType_wrapper__::ReadingType_wrapper__()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hello_world.ReadingType_wrapper__)
}

void ReadingType_wrapper__::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReadingType_wrapper__::ReadingType_wrapper__(const ReadingType_wrapper__& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:hello_world.ReadingType_wrapper__)
}

void ReadingType_wrapper__::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

ReadingType_wrapper__::~ReadingType_wrapper__() {
  // @@protoc_insertion_point(destructor:hello_world.ReadingType_wrapper__)
  SharedDtor();
}

void ReadingType_wrapper__::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReadingType_wrapper__::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadingType_wrapper__::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadingType_wrapper___descriptor_;
}

const ReadingType_wrapper__& ReadingType_wrapper__::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hello_5fworld_2eproto();
  return *default_instance_;
}

ReadingType_wrapper__* ReadingType_wrapper__::default_instance_ = NULL;

ReadingType_wrapper__* ReadingType_wrapper__::New(::google::protobuf::Arena* arena) const {
  ReadingType_wrapper__* n = new ReadingType_wrapper__;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadingType_wrapper__::Clear() {
// @@protoc_insertion_point(message_clear_start:hello_world.ReadingType_wrapper__)
  value_ = 0;
}

bool ReadingType_wrapper__::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hello_world.ReadingType_wrapper__)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hello_world.ReadingType value = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::hello_world::ReadingType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hello_world.ReadingType_wrapper__)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hello_world.ReadingType_wrapper__)
  return false;
#undef DO_
}

void ReadingType_wrapper__::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hello_world.ReadingType_wrapper__)
  // optional .hello_world.ReadingType value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:hello_world.ReadingType_wrapper__)
}

::google::protobuf::uint8* ReadingType_wrapper__::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hello_world.ReadingType_wrapper__)
  // optional .hello_world.ReadingType value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hello_world.ReadingType_wrapper__)
  return target;
}

int ReadingType_wrapper__::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:hello_world.ReadingType_wrapper__)
  int total_size = 0;

  // optional .hello_world.ReadingType value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadingType_wrapper__::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hello_world.ReadingType_wrapper__)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadingType_wrapper__* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadingType_wrapper__>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hello_world.ReadingType_wrapper__)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hello_world.ReadingType_wrapper__)
    MergeFrom(*source);
  }
}

void ReadingType_wrapper__::MergeFrom(const ReadingType_wrapper__& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hello_world.ReadingType_wrapper__)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ReadingType_wrapper__::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hello_world.ReadingType_wrapper__)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingType_wrapper__::CopyFrom(const ReadingType_wrapper__& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hello_world.ReadingType_wrapper__)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingType_wrapper__::IsInitialized() const {

  return true;
}

void ReadingType_wrapper__::Swap(ReadingType_wrapper__* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadingType_wrapper__::InternalSwap(ReadingType_wrapper__* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadingType_wrapper__::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadingType_wrapper___descriptor_;
  metadata.reflection = ReadingType_wrapper___reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadingType_wrapper__

// optional .hello_world.ReadingType value = 1;
void ReadingType_wrapper__::clear_value() {
  value_ = 0;
}
 ::hello_world::ReadingType ReadingType_wrapper__::value() const {
  // @@protoc_insertion_point(field_get:hello_world.ReadingType_wrapper__.value)
  return static_cast< ::hello_world::ReadingType >(value_);
}
 void ReadingType_wrapper__::set_value(::hello_world::ReadingType value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:hello_world.ReadingType_wrapper__.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hello_world

// @@protoc_insertion_point(global_scope)
