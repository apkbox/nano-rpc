// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arizona_api_server.proto

#ifndef PROTOBUF_arizona_5fapi_5fserver_2eproto__INCLUDED
#define PROTOBUF_arizona_5fapi_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include "nanorpc/rpc_types.pb.h"
// @@protoc_insertion_point(includes)

namespace arizona_api_service {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_arizona_5fapi_5fserver_2eproto();
void protobuf_AssignDesc_arizona_5fapi_5fserver_2eproto();
void protobuf_ShutdownFile_arizona_5fapi_5fserver_2eproto();

class ProductInfo;
class SoftwarePackage;
class SoftwarePackageList;

// ===================================================================

class ProductInfo : public ::google::protobuf::Message {
 public:
  ProductInfo();
  virtual ~ProductInfo();

  ProductInfo(const ProductInfo& from);

  inline ProductInfo& operator=(const ProductInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductInfo& default_instance();

  void Swap(ProductInfo* other);

  // implements Message ----------------------------------------------

  inline ProductInfo* New() const { return New(NULL); }

  ProductInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductInfo& from);
  void MergeFrom(const ProductInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string version_string = 2;
  void clear_version_string();
  static const int kVersionStringFieldNumber = 2;
  const ::std::string& version_string() const;
  void set_version_string(const ::std::string& value);
  void set_version_string(const char* value);
  void set_version_string(const char* value, size_t size);
  ::std::string* mutable_version_string();
  ::std::string* release_version_string();
  void set_allocated_version_string(::std::string* version_string);

  // optional uint32 serial_number = 3;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 3;
  ::google::protobuf::uint32 serial_number() const;
  void set_serial_number(::google::protobuf::uint32 value);

  // optional string platform = 4;
  void clear_platform();
  static const int kPlatformFieldNumber = 4;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // optional string base_model = 5;
  void clear_base_model();
  static const int kBaseModelFieldNumber = 5;
  const ::std::string& base_model() const;
  void set_base_model(const ::std::string& value);
  void set_base_model(const char* value);
  void set_base_model(const char* value, size_t size);
  ::std::string* mutable_base_model();
  ::std::string* release_base_model();
  void set_allocated_base_model(::std::string* base_model);

  // optional string model = 6;
  void clear_model();
  static const int kModelFieldNumber = 6;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string make_and_model = 7;
  void clear_make_and_model();
  static const int kMakeAndModelFieldNumber = 7;
  const ::std::string& make_and_model() const;
  void set_make_and_model(const ::std::string& value);
  void set_make_and_model(const char* value);
  void set_make_and_model(const char* value, size_t size);
  ::std::string* mutable_make_and_model();
  ::std::string* release_make_and_model();
  void set_allocated_make_and_model(::std::string* make_and_model);

  // @@protoc_insertion_point(class_scope:arizona_api_service.ProductInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr version_string_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr base_model_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr make_and_model_;
  ::google::protobuf::uint32 serial_number_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_AssignDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_ShutdownFile_arizona_5fapi_5fserver_2eproto();

  void InitAsDefaultInstance();
  static ProductInfo* default_instance_;
};
// -------------------------------------------------------------------

class SoftwarePackage : public ::google::protobuf::Message {
 public:
  SoftwarePackage();
  virtual ~SoftwarePackage();

  SoftwarePackage(const SoftwarePackage& from);

  inline SoftwarePackage& operator=(const SoftwarePackage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftwarePackage& default_instance();

  void Swap(SoftwarePackage* other);

  // implements Message ----------------------------------------------

  inline SoftwarePackage* New() const { return New(NULL); }

  SoftwarePackage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoftwarePackage& from);
  void MergeFrom(const SoftwarePackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SoftwarePackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_name = 1;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional string full_path = 2;
  void clear_full_path();
  static const int kFullPathFieldNumber = 2;
  const ::std::string& full_path() const;
  void set_full_path(const ::std::string& value);
  void set_full_path(const char* value);
  void set_full_path(const char* value, size_t size);
  ::std::string* mutable_full_path();
  ::std::string* release_full_path();
  void set_allocated_full_path(::std::string* full_path);

  // optional string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string version_string = 5;
  void clear_version_string();
  static const int kVersionStringFieldNumber = 5;
  const ::std::string& version_string() const;
  void set_version_string(const ::std::string& value);
  void set_version_string(const char* value);
  void set_version_string(const char* value, size_t size);
  ::std::string* mutable_version_string();
  ::std::string* release_version_string();
  void set_allocated_version_string(::std::string* version_string);

  // optional uint64 file_size = 6;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 6;
  ::google::protobuf::uint64 file_size() const;
  void set_file_size(::google::protobuf::uint64 value);

  // optional uint64 space_required = 7;
  void clear_space_required();
  static const int kSpaceRequiredFieldNumber = 7;
  ::google::protobuf::uint64 space_required() const;
  void set_space_required(::google::protobuf::uint64 value);

  // optional bool usable = 8;
  void clear_usable();
  static const int kUsableFieldNumber = 8;
  bool usable() const;
  void set_usable(bool value);

  // optional bool trusted = 9;
  void clear_trusted();
  static const int kTrustedFieldNumber = 9;
  bool trusted() const;
  void set_trusted(bool value);

  // optional string supported_products = 10;
  void clear_supported_products();
  static const int kSupportedProductsFieldNumber = 10;
  const ::std::string& supported_products() const;
  void set_supported_products(const ::std::string& value);
  void set_supported_products(const char* value);
  void set_supported_products(const char* value, size_t size);
  ::std::string* mutable_supported_products();
  ::std::string* release_supported_products();
  void set_allocated_supported_products(::std::string* supported_products);

  // @@protoc_insertion_point(class_scope:arizona_api_service.SoftwarePackage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr full_path_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr version_string_;
  ::google::protobuf::uint64 file_size_;
  ::google::protobuf::uint64 space_required_;
  ::google::protobuf::internal::ArenaStringPtr supported_products_;
  bool usable_;
  bool trusted_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_AssignDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_ShutdownFile_arizona_5fapi_5fserver_2eproto();

  void InitAsDefaultInstance();
  static SoftwarePackage* default_instance_;
};
// -------------------------------------------------------------------

class SoftwarePackageList : public ::google::protobuf::Message {
 public:
  SoftwarePackageList();
  virtual ~SoftwarePackageList();

  SoftwarePackageList(const SoftwarePackageList& from);

  inline SoftwarePackageList& operator=(const SoftwarePackageList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftwarePackageList& default_instance();

  void Swap(SoftwarePackageList* other);

  // implements Message ----------------------------------------------

  inline SoftwarePackageList* New() const { return New(NULL); }

  SoftwarePackageList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoftwarePackageList& from);
  void MergeFrom(const SoftwarePackageList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SoftwarePackageList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .arizona_api_service.SoftwarePackage list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::arizona_api_service::SoftwarePackage& list(int index) const;
  ::arizona_api_service::SoftwarePackage* mutable_list(int index);
  ::arizona_api_service::SoftwarePackage* add_list();
  ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >&
      list() const;

  // @@protoc_insertion_point(class_scope:arizona_api_service.SoftwarePackageList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage > list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_AssignDesc_arizona_5fapi_5fserver_2eproto();
  friend void protobuf_ShutdownFile_arizona_5fapi_5fserver_2eproto();

  void InitAsDefaultInstance();
  static SoftwarePackageList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductInfo

// optional string version = 1;
inline void ProductInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::version() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.version)
}
inline void ProductInfo::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.version)
}
inline void ProductInfo::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.version)
}
inline ::std::string* ProductInfo::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_version() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.version)
}

// optional string version_string = 2;
inline void ProductInfo::clear_version_string() {
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::version_string() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.version_string)
  return version_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_version_string(const ::std::string& value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.version_string)
}
inline void ProductInfo::set_version_string(const char* value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.version_string)
}
inline void ProductInfo::set_version_string(const char* value, size_t size) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.version_string)
}
inline ::std::string* ProductInfo::mutable_version_string() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.version_string)
  return version_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_version_string() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.version_string)
  
  return version_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_version_string(::std::string* version_string) {
  if (version_string != NULL) {
    
  } else {
    
  }
  version_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_string);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.version_string)
}

// optional uint32 serial_number = 3;
inline void ProductInfo::clear_serial_number() {
  serial_number_ = 0u;
}
inline ::google::protobuf::uint32 ProductInfo::serial_number() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.serial_number)
  return serial_number_;
}
inline void ProductInfo::set_serial_number(::google::protobuf::uint32 value) {
  
  serial_number_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.serial_number)
}

// optional string platform = 4;
inline void ProductInfo::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::platform() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.platform)
  return platform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.platform)
}
inline void ProductInfo::set_platform(const char* value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.platform)
}
inline void ProductInfo::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.platform)
}
inline ::std::string* ProductInfo::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_platform() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.platform)
}

// optional string base_model = 5;
inline void ProductInfo::clear_base_model() {
  base_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::base_model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.base_model)
  return base_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_base_model(const ::std::string& value) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.base_model)
}
inline void ProductInfo::set_base_model(const char* value) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.base_model)
}
inline void ProductInfo::set_base_model(const char* value, size_t size) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.base_model)
}
inline ::std::string* ProductInfo::mutable_base_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.base_model)
  return base_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_base_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.base_model)
  
  return base_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_base_model(::std::string* base_model) {
  if (base_model != NULL) {
    
  } else {
    
  }
  base_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.base_model)
}

// optional string model = 6;
inline void ProductInfo::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.model)
}
inline void ProductInfo::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.model)
}
inline void ProductInfo::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.model)
}
inline ::std::string* ProductInfo::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.model)
}

// optional string make_and_model = 7;
inline void ProductInfo::clear_make_and_model() {
  make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductInfo::make_and_model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.make_and_model)
  return make_and_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_make_and_model(const ::std::string& value) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.make_and_model)
}
inline void ProductInfo::set_make_and_model(const char* value) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.make_and_model)
}
inline void ProductInfo::set_make_and_model(const char* value, size_t size) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.make_and_model)
}
inline ::std::string* ProductInfo::mutable_make_and_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.make_and_model)
  return make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductInfo::release_make_and_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.make_and_model)
  
  return make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductInfo::set_allocated_make_and_model(::std::string* make_and_model) {
  if (make_and_model != NULL) {
    
  } else {
    
  }
  make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), make_and_model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.make_and_model)
}

// -------------------------------------------------------------------

// SoftwarePackage

// optional string file_name = 1;
inline void SoftwarePackage::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::file_name() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.file_name)
}
inline void SoftwarePackage::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.file_name)
}
inline void SoftwarePackage::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.file_name)
}
inline ::std::string* SoftwarePackage::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_file_name() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.file_name)
}

// optional string full_path = 2;
inline void SoftwarePackage::clear_full_path() {
  full_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::full_path() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.full_path)
  return full_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_full_path(const ::std::string& value) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.full_path)
}
inline void SoftwarePackage::set_full_path(const char* value) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.full_path)
}
inline void SoftwarePackage::set_full_path(const char* value, size_t size) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.full_path)
}
inline ::std::string* SoftwarePackage::mutable_full_path() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.full_path)
  return full_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_full_path() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.full_path)
  
  return full_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_full_path(::std::string* full_path) {
  if (full_path != NULL) {
    
  } else {
    
  }
  full_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_path);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.full_path)
}

// optional string description = 3;
inline void SoftwarePackage::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::description() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.description)
}
inline void SoftwarePackage::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.description)
}
inline void SoftwarePackage::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.description)
}
inline ::std::string* SoftwarePackage::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_description() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.description)
}

// optional string version = 4;
inline void SoftwarePackage::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::version() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.version)
}
inline void SoftwarePackage::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.version)
}
inline void SoftwarePackage::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.version)
}
inline ::std::string* SoftwarePackage::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_version() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.version)
}

// optional string version_string = 5;
inline void SoftwarePackage::clear_version_string() {
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::version_string() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.version_string)
  return version_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_version_string(const ::std::string& value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.version_string)
}
inline void SoftwarePackage::set_version_string(const char* value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.version_string)
}
inline void SoftwarePackage::set_version_string(const char* value, size_t size) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.version_string)
}
inline ::std::string* SoftwarePackage::mutable_version_string() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.version_string)
  return version_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_version_string() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.version_string)
  
  return version_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_version_string(::std::string* version_string) {
  if (version_string != NULL) {
    
  } else {
    
  }
  version_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_string);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.version_string)
}

// optional uint64 file_size = 6;
inline void SoftwarePackage::clear_file_size() {
  file_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SoftwarePackage::file_size() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.file_size)
  return file_size_;
}
inline void SoftwarePackage::set_file_size(::google::protobuf::uint64 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.file_size)
}

// optional uint64 space_required = 7;
inline void SoftwarePackage::clear_space_required() {
  space_required_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SoftwarePackage::space_required() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.space_required)
  return space_required_;
}
inline void SoftwarePackage::set_space_required(::google::protobuf::uint64 value) {
  
  space_required_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.space_required)
}

// optional bool usable = 8;
inline void SoftwarePackage::clear_usable() {
  usable_ = false;
}
inline bool SoftwarePackage::usable() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.usable)
  return usable_;
}
inline void SoftwarePackage::set_usable(bool value) {
  
  usable_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.usable)
}

// optional bool trusted = 9;
inline void SoftwarePackage::clear_trusted() {
  trusted_ = false;
}
inline bool SoftwarePackage::trusted() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.trusted)
  return trusted_;
}
inline void SoftwarePackage::set_trusted(bool value) {
  
  trusted_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.trusted)
}

// optional string supported_products = 10;
inline void SoftwarePackage::clear_supported_products() {
  supported_products_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SoftwarePackage::supported_products() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.supported_products)
  return supported_products_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_supported_products(const ::std::string& value) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.supported_products)
}
inline void SoftwarePackage::set_supported_products(const char* value) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.supported_products)
}
inline void SoftwarePackage::set_supported_products(const char* value, size_t size) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.supported_products)
}
inline ::std::string* SoftwarePackage::mutable_supported_products() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.supported_products)
  return supported_products_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwarePackage::release_supported_products() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.supported_products)
  
  return supported_products_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwarePackage::set_allocated_supported_products(::std::string* supported_products) {
  if (supported_products != NULL) {
    
  } else {
    
  }
  supported_products_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), supported_products);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.supported_products)
}

// -------------------------------------------------------------------

// SoftwarePackageList

// repeated .arizona_api_service.SoftwarePackage list = 1;
inline int SoftwarePackageList::list_size() const {
  return list_.size();
}
inline void SoftwarePackageList::clear_list() {
  list_.Clear();
}
inline const ::arizona_api_service::SoftwarePackage& SoftwarePackageList::list(int index) const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackageList.list)
  return list_.Get(index);
}
inline ::arizona_api_service::SoftwarePackage* SoftwarePackageList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackageList.list)
  return list_.Mutable(index);
}
inline ::arizona_api_service::SoftwarePackage* SoftwarePackageList::add_list() {
  // @@protoc_insertion_point(field_add:arizona_api_service.SoftwarePackageList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >*
SoftwarePackageList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:arizona_api_service.SoftwarePackageList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >&
SoftwarePackageList::list() const {
  // @@protoc_insertion_point(field_list:arizona_api_service.SoftwarePackageList.list)
  return list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace arizona_api_service

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_arizona_5fapi_5fserver_2eproto__INCLUDED
