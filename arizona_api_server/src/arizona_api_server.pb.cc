// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arizona_api_server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "arizona_api_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace arizona_api_service {
class ProductInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProductInfo> {
} _ProductInfo_default_instance_;
class SoftwarePackageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SoftwarePackage> {
} _SoftwarePackage_default_instance_;
class SoftwarePackageListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SoftwarePackageList> {
} _SoftwarePackageList_default_instance_;

namespace protobuf_arizona_5fapi_5fserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, version_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, serial_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, base_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductInfo, make_and_model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, full_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, version_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, space_required_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, usable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, trusted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackage, supported_products_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackageList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwarePackageList, list_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ProductInfo)},
  { 11, -1, sizeof(SoftwarePackage)},
  { 25, -1, sizeof(SoftwarePackageList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProductInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SoftwarePackage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SoftwarePackageList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "arizona_api_server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProductInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SoftwarePackage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SoftwarePackageList_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  ::nanorpc::protobuf_nanorpc_2frpc_5ftypes_2eproto::InitDefaults();
  _ProductInfo_default_instance_.DefaultConstruct();
  _SoftwarePackage_default_instance_.DefaultConstruct();
  _SoftwarePackageList_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030arizona_api_server.proto\022\023arizona_api_"
      "service\032\033google/protobuf/empty.proto\032\036go"
      "ogle/protobuf/wrappers.proto\032\027nanorpc/rp"
      "c_types.proto\"\232\001\n\013ProductInfo\022\017\n\007version"
      "\030\001 \001(\t\022\026\n\016version_string\030\002 \001(\t\022\025\n\rserial"
      "_number\030\003 \001(\r\022\020\n\010platform\030\004 \001(\t\022\022\n\nbase_"
      "model\030\005 \001(\t\022\r\n\005model\030\006 \001(\t\022\026\n\016make_and_m"
      "odel\030\007 \001(\t\"\335\001\n\017SoftwarePackage\022\021\n\tfile_n"
      "ame\030\001 \001(\t\022\021\n\tfull_path\030\002 \001(\t\022\023\n\013descript"
      "ion\030\003 \001(\t\022\017\n\007version\030\004 \001(\t\022\026\n\016version_st"
      "ring\030\005 \001(\t\022\021\n\tfile_size\030\006 \001(\004\022\026\n\016space_r"
      "equired\030\007 \001(\004\022\016\n\006usable\030\010 \001(\010\022\017\n\007trusted"
      "\030\t \001(\010\022\032\n\022supported_products\030\n \001(\t\"I\n\023So"
      "ftwarePackageList\0222\n\004list\030\001 \003(\0132$.arizon"
      "a_api_service.SoftwarePackage2b\n\024Softwar"
      "eUpdateEvents\022D\n\022PackageListChanged\022\026.go"
      "ogle.protobuf.Empty\032\026.google.protobuf.Em"
      "pty\032\004\350\213,\0012b\n\024ProductInfoInterface\022J\n\016Get"
      "ProductInfo\022\026.google.protobuf.Empty\032 .ar"
      "izona_api_service.ProductInfo2\341\002\n\027Softwa"
      "reUpdateInterface\022X\n\024GetAvailablePackage"
      "s\022\026.google.protobuf.Empty\032(.arizona_api_"
      "service.SoftwarePackageList\022T\n\030StartPack"
      "ageInstallation\022\034.google.protobuf.String"
      "Value\032\032.google.protobuf.BoolValue\022I\n\rDel"
      "etePackage\022\034.google.protobuf.StringValue"
      "\032\032.google.protobuf.BoolValue\022K\n\023GetPacka"
      "geStorePath\022\026.google.protobuf.Empty\032\034.go"
      "ogle.protobuf.StringValueb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "arizona_api_server.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::nanorpc::protobuf_nanorpc_2frpc_5ftypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_arizona_5fapi_5fserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductInfo::kVersionFieldNumber;
const int ProductInfo::kVersionStringFieldNumber;
const int ProductInfo::kSerialNumberFieldNumber;
const int ProductInfo::kPlatformFieldNumber;
const int ProductInfo::kBaseModelFieldNumber;
const int ProductInfo::kModelFieldNumber;
const int ProductInfo::kMakeAndModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductInfo::ProductInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:arizona_api_service.ProductInfo)
}
ProductInfo::ProductInfo(const ProductInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  version_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_string().size() > 0) {
    version_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_string_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  base_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_model().size() > 0) {
    base_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_model_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.make_and_model().size() > 0) {
    make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.make_and_model_);
  }
  serial_number_ = from.serial_number_;
  // @@protoc_insertion_point(copy_constructor:arizona_api_service.ProductInfo)
}

void ProductInfo::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  make_and_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_number_ = 0u;
  _cached_size_ = 0;
}

ProductInfo::~ProductInfo() {
  // @@protoc_insertion_point(destructor:arizona_api_service.ProductInfo)
  SharedDtor();
}

void ProductInfo::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  make_and_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProductInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductInfo::descriptor() {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[0].descriptor;
}

const ProductInfo& ProductInfo::default_instance() {
  protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProductInfo* ProductInfo::New(::google::protobuf::Arena* arena) const {
  ProductInfo* n = new ProductInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:arizona_api_service.ProductInfo)
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_number_ = 0u;
}

bool ProductInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arizona_api_service.ProductInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version_string = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_string().data(), this->version_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.version_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial_number = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_model = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_model().data(), this->base_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.base_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string make_and_model = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_make_and_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->make_and_model().data(), this->make_and_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.ProductInfo.make_and_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arizona_api_service.ProductInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arizona_api_service.ProductInfo)
  return false;
#undef DO_
}

void ProductInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arizona_api_service.ProductInfo)
  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string version_string = 2;
  if (this->version_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_string().data(), this->version_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.version_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version_string(), output);
  }

  // uint32 serial_number = 3;
  if (this->serial_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial_number(), output);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->platform(), output);
  }

  // string base_model = 5;
  if (this->base_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_model().data(), this->base_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.base_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->base_model(), output);
  }

  // string model = 6;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->model(), output);
  }

  // string make_and_model = 7;
  if (this->make_and_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->make_and_model().data(), this->make_and_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.make_and_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->make_and_model(), output);
  }

  // @@protoc_insertion_point(serialize_end:arizona_api_service.ProductInfo)
}

::google::protobuf::uint8* ProductInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:arizona_api_service.ProductInfo)
  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string version_string = 2;
  if (this->version_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_string().data(), this->version_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.version_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version_string(), target);
  }

  // uint32 serial_number = 3;
  if (this->serial_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial_number(), target);
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->platform(), target);
  }

  // string base_model = 5;
  if (this->base_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_model().data(), this->base_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.base_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->base_model(), target);
  }

  // string model = 6;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->model(), target);
  }

  // string make_and_model = 7;
  if (this->make_and_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->make_and_model().data(), this->make_and_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.ProductInfo.make_and_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->make_and_model(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:arizona_api_service.ProductInfo)
  return target;
}

size_t ProductInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arizona_api_service.ProductInfo)
  size_t total_size = 0;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string version_string = 2;
  if (this->version_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_string());
  }

  // string platform = 4;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string base_model = 5;
  if (this->base_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_model());
  }

  // string model = 6;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string make_and_model = 7;
  if (this->make_and_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->make_and_model());
  }

  // uint32 serial_number = 3;
  if (this->serial_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arizona_api_service.ProductInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arizona_api_service.ProductInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arizona_api_service.ProductInfo)
    MergeFrom(*source);
  }
}

void ProductInfo::MergeFrom(const ProductInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arizona_api_service.ProductInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.version_string().size() > 0) {

    version_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_string_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.base_model().size() > 0) {

    base_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_model_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.make_and_model().size() > 0) {

    make_and_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.make_and_model_);
  }
  if (from.serial_number() != 0) {
    set_serial_number(from.serial_number());
  }
}

void ProductInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arizona_api_service.ProductInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductInfo::CopyFrom(const ProductInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arizona_api_service.ProductInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductInfo::IsInitialized() const {
  return true;
}

void ProductInfo::Swap(ProductInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductInfo::InternalSwap(ProductInfo* other) {
  version_.Swap(&other->version_);
  version_string_.Swap(&other->version_string_);
  platform_.Swap(&other->platform_);
  base_model_.Swap(&other->base_model_);
  model_.Swap(&other->model_);
  make_and_model_.Swap(&other->make_and_model_);
  std::swap(serial_number_, other->serial_number_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductInfo::GetMetadata() const {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductInfo

// string version = 1;
void ProductInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::version() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.version)
  return version_.GetNoArena();
}
void ProductInfo::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.version)
}
#if LANG_CXX11
void ProductInfo::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.version)
}
#endif
void ProductInfo::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.version)
}
void ProductInfo::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.version)
}
::std::string* ProductInfo::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_version() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.version)
}

// string version_string = 2;
void ProductInfo::clear_version_string() {
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::version_string() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.version_string)
  return version_string_.GetNoArena();
}
void ProductInfo::set_version_string(const ::std::string& value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.version_string)
}
#if LANG_CXX11
void ProductInfo::set_version_string(::std::string&& value) {
  
  version_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.version_string)
}
#endif
void ProductInfo::set_version_string(const char* value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.version_string)
}
void ProductInfo::set_version_string(const char* value, size_t size) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.version_string)
}
::std::string* ProductInfo::mutable_version_string() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.version_string)
  return version_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_version_string() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.version_string)
  
  return version_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_version_string(::std::string* version_string) {
  if (version_string != NULL) {
    
  } else {
    
  }
  version_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_string);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.version_string)
}

// uint32 serial_number = 3;
void ProductInfo::clear_serial_number() {
  serial_number_ = 0u;
}
::google::protobuf::uint32 ProductInfo::serial_number() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.serial_number)
  return serial_number_;
}
void ProductInfo::set_serial_number(::google::protobuf::uint32 value) {
  
  serial_number_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.serial_number)
}

// string platform = 4;
void ProductInfo::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::platform() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.platform)
  return platform_.GetNoArena();
}
void ProductInfo::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.platform)
}
#if LANG_CXX11
void ProductInfo::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.platform)
}
#endif
void ProductInfo::set_platform(const char* value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.platform)
}
void ProductInfo::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.platform)
}
::std::string* ProductInfo::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_platform() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.platform)
}

// string base_model = 5;
void ProductInfo::clear_base_model() {
  base_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::base_model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.base_model)
  return base_model_.GetNoArena();
}
void ProductInfo::set_base_model(const ::std::string& value) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.base_model)
}
#if LANG_CXX11
void ProductInfo::set_base_model(::std::string&& value) {
  
  base_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.base_model)
}
#endif
void ProductInfo::set_base_model(const char* value) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.base_model)
}
void ProductInfo::set_base_model(const char* value, size_t size) {
  
  base_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.base_model)
}
::std::string* ProductInfo::mutable_base_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.base_model)
  return base_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_base_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.base_model)
  
  return base_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_base_model(::std::string* base_model) {
  if (base_model != NULL) {
    
  } else {
    
  }
  base_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.base_model)
}

// string model = 6;
void ProductInfo::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.model)
  return model_.GetNoArena();
}
void ProductInfo::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.model)
}
#if LANG_CXX11
void ProductInfo::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.model)
}
#endif
void ProductInfo::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.model)
}
void ProductInfo::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.model)
}
::std::string* ProductInfo::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.model)
}

// string make_and_model = 7;
void ProductInfo::clear_make_and_model() {
  make_and_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProductInfo::make_and_model() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.ProductInfo.make_and_model)
  return make_and_model_.GetNoArena();
}
void ProductInfo::set_make_and_model(const ::std::string& value) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.ProductInfo.make_and_model)
}
#if LANG_CXX11
void ProductInfo::set_make_and_model(::std::string&& value) {
  
  make_and_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.ProductInfo.make_and_model)
}
#endif
void ProductInfo::set_make_and_model(const char* value) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.ProductInfo.make_and_model)
}
void ProductInfo::set_make_and_model(const char* value, size_t size) {
  
  make_and_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.ProductInfo.make_and_model)
}
::std::string* ProductInfo::mutable_make_and_model() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.ProductInfo.make_and_model)
  return make_and_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProductInfo::release_make_and_model() {
  // @@protoc_insertion_point(field_release:arizona_api_service.ProductInfo.make_and_model)
  
  return make_and_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProductInfo::set_allocated_make_and_model(::std::string* make_and_model) {
  if (make_and_model != NULL) {
    
  } else {
    
  }
  make_and_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), make_and_model);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.ProductInfo.make_and_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SoftwarePackage::kFileNameFieldNumber;
const int SoftwarePackage::kFullPathFieldNumber;
const int SoftwarePackage::kDescriptionFieldNumber;
const int SoftwarePackage::kVersionFieldNumber;
const int SoftwarePackage::kVersionStringFieldNumber;
const int SoftwarePackage::kFileSizeFieldNumber;
const int SoftwarePackage::kSpaceRequiredFieldNumber;
const int SoftwarePackage::kUsableFieldNumber;
const int SoftwarePackage::kTrustedFieldNumber;
const int SoftwarePackage::kSupportedProductsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SoftwarePackage::SoftwarePackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:arizona_api_service.SoftwarePackage)
}
SoftwarePackage::SoftwarePackage(const SoftwarePackage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  full_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_path().size() > 0) {
    full_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_path_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  version_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_string().size() > 0) {
    version_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_string_);
  }
  supported_products_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.supported_products().size() > 0) {
    supported_products_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supported_products_);
  }
  ::memcpy(&file_size_, &from.file_size_,
    reinterpret_cast<char*>(&trusted_) -
    reinterpret_cast<char*>(&file_size_) + sizeof(trusted_));
  // @@protoc_insertion_point(copy_constructor:arizona_api_service.SoftwarePackage)
}

void SoftwarePackage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supported_products_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_size_, 0, reinterpret_cast<char*>(&trusted_) -
    reinterpret_cast<char*>(&file_size_) + sizeof(trusted_));
  _cached_size_ = 0;
}

SoftwarePackage::~SoftwarePackage() {
  // @@protoc_insertion_point(destructor:arizona_api_service.SoftwarePackage)
  SharedDtor();
}

void SoftwarePackage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supported_products_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SoftwarePackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoftwarePackage::descriptor() {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[1].descriptor;
}

const SoftwarePackage& SoftwarePackage::default_instance() {
  protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SoftwarePackage* SoftwarePackage::New(::google::protobuf::Arena* arena) const {
  SoftwarePackage* n = new SoftwarePackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SoftwarePackage::Clear() {
// @@protoc_insertion_point(message_clear_start:arizona_api_service.SoftwarePackage)
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supported_products_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_size_, 0, reinterpret_cast<char*>(&trusted_) -
    reinterpret_cast<char*>(&file_size_) + sizeof(trusted_));
}

bool SoftwarePackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arizona_api_service.SoftwarePackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string full_path = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_path().data(), this->full_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.full_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version_string = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_string().data(), this->version_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.version_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_size = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 space_required = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &space_required_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool usable = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trusted = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string supported_products = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_supported_products()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->supported_products().data(), this->supported_products().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arizona_api_service.SoftwarePackage.supported_products"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arizona_api_service.SoftwarePackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arizona_api_service.SoftwarePackage)
  return false;
#undef DO_
}

void SoftwarePackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arizona_api_service.SoftwarePackage)
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string full_path = 2;
  if (this->full_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_path().data(), this->full_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.full_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->full_path(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // string version_string = 5;
  if (this->version_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_string().data(), this->version_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.version_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->version_string(), output);
  }

  // uint64 file_size = 6;
  if (this->file_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->file_size(), output);
  }

  // uint64 space_required = 7;
  if (this->space_required() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->space_required(), output);
  }

  // bool usable = 8;
  if (this->usable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->usable(), output);
  }

  // bool trusted = 9;
  if (this->trusted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->trusted(), output);
  }

  // string supported_products = 10;
  if (this->supported_products().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->supported_products().data(), this->supported_products().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.supported_products");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->supported_products(), output);
  }

  // @@protoc_insertion_point(serialize_end:arizona_api_service.SoftwarePackage)
}

::google::protobuf::uint8* SoftwarePackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:arizona_api_service.SoftwarePackage)
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string full_path = 2;
  if (this->full_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_path().data(), this->full_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.full_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->full_path(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // string version_string = 5;
  if (this->version_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_string().data(), this->version_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.version_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version_string(), target);
  }

  // uint64 file_size = 6;
  if (this->file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->file_size(), target);
  }

  // uint64 space_required = 7;
  if (this->space_required() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->space_required(), target);
  }

  // bool usable = 8;
  if (this->usable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->usable(), target);
  }

  // bool trusted = 9;
  if (this->trusted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->trusted(), target);
  }

  // string supported_products = 10;
  if (this->supported_products().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->supported_products().data(), this->supported_products().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arizona_api_service.SoftwarePackage.supported_products");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->supported_products(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:arizona_api_service.SoftwarePackage)
  return target;
}

size_t SoftwarePackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arizona_api_service.SoftwarePackage)
  size_t total_size = 0;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string full_path = 2;
  if (this->full_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_path());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string version_string = 5;
  if (this->version_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_string());
  }

  // string supported_products = 10;
  if (this->supported_products().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->supported_products());
  }

  // uint64 file_size = 6;
  if (this->file_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_size());
  }

  // uint64 space_required = 7;
  if (this->space_required() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->space_required());
  }

  // bool usable = 8;
  if (this->usable() != 0) {
    total_size += 1 + 1;
  }

  // bool trusted = 9;
  if (this->trusted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoftwarePackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arizona_api_service.SoftwarePackage)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwarePackage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SoftwarePackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arizona_api_service.SoftwarePackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arizona_api_service.SoftwarePackage)
    MergeFrom(*source);
  }
}

void SoftwarePackage::MergeFrom(const SoftwarePackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arizona_api_service.SoftwarePackage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.full_path().size() > 0) {

    full_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_path_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.version_string().size() > 0) {

    version_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_string_);
  }
  if (from.supported_products().size() > 0) {

    supported_products_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supported_products_);
  }
  if (from.file_size() != 0) {
    set_file_size(from.file_size());
  }
  if (from.space_required() != 0) {
    set_space_required(from.space_required());
  }
  if (from.usable() != 0) {
    set_usable(from.usable());
  }
  if (from.trusted() != 0) {
    set_trusted(from.trusted());
  }
}

void SoftwarePackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arizona_api_service.SoftwarePackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwarePackage::CopyFrom(const SoftwarePackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arizona_api_service.SoftwarePackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwarePackage::IsInitialized() const {
  return true;
}

void SoftwarePackage::Swap(SoftwarePackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SoftwarePackage::InternalSwap(SoftwarePackage* other) {
  file_name_.Swap(&other->file_name_);
  full_path_.Swap(&other->full_path_);
  description_.Swap(&other->description_);
  version_.Swap(&other->version_);
  version_string_.Swap(&other->version_string_);
  supported_products_.Swap(&other->supported_products_);
  std::swap(file_size_, other->file_size_);
  std::swap(space_required_, other->space_required_);
  std::swap(usable_, other->usable_);
  std::swap(trusted_, other->trusted_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SoftwarePackage::GetMetadata() const {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SoftwarePackage

// string file_name = 1;
void SoftwarePackage::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::file_name() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.file_name)
  return file_name_.GetNoArena();
}
void SoftwarePackage::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.file_name)
}
#if LANG_CXX11
void SoftwarePackage::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.file_name)
}
#endif
void SoftwarePackage::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.file_name)
}
void SoftwarePackage::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.file_name)
}
::std::string* SoftwarePackage::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_file_name() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.file_name)
}

// string full_path = 2;
void SoftwarePackage::clear_full_path() {
  full_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::full_path() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.full_path)
  return full_path_.GetNoArena();
}
void SoftwarePackage::set_full_path(const ::std::string& value) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.full_path)
}
#if LANG_CXX11
void SoftwarePackage::set_full_path(::std::string&& value) {
  
  full_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.full_path)
}
#endif
void SoftwarePackage::set_full_path(const char* value) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.full_path)
}
void SoftwarePackage::set_full_path(const char* value, size_t size) {
  
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.full_path)
}
::std::string* SoftwarePackage::mutable_full_path() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.full_path)
  return full_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_full_path() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.full_path)
  
  return full_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_full_path(::std::string* full_path) {
  if (full_path != NULL) {
    
  } else {
    
  }
  full_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_path);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.full_path)
}

// string description = 3;
void SoftwarePackage::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::description() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.description)
  return description_.GetNoArena();
}
void SoftwarePackage::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.description)
}
#if LANG_CXX11
void SoftwarePackage::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.description)
}
#endif
void SoftwarePackage::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.description)
}
void SoftwarePackage::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.description)
}
::std::string* SoftwarePackage::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_description() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.description)
}

// string version = 4;
void SoftwarePackage::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::version() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.version)
  return version_.GetNoArena();
}
void SoftwarePackage::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.version)
}
#if LANG_CXX11
void SoftwarePackage::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.version)
}
#endif
void SoftwarePackage::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.version)
}
void SoftwarePackage::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.version)
}
::std::string* SoftwarePackage::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_version() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.version)
}

// string version_string = 5;
void SoftwarePackage::clear_version_string() {
  version_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::version_string() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.version_string)
  return version_string_.GetNoArena();
}
void SoftwarePackage::set_version_string(const ::std::string& value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.version_string)
}
#if LANG_CXX11
void SoftwarePackage::set_version_string(::std::string&& value) {
  
  version_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.version_string)
}
#endif
void SoftwarePackage::set_version_string(const char* value) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.version_string)
}
void SoftwarePackage::set_version_string(const char* value, size_t size) {
  
  version_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.version_string)
}
::std::string* SoftwarePackage::mutable_version_string() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.version_string)
  return version_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_version_string() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.version_string)
  
  return version_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_version_string(::std::string* version_string) {
  if (version_string != NULL) {
    
  } else {
    
  }
  version_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_string);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.version_string)
}

// uint64 file_size = 6;
void SoftwarePackage::clear_file_size() {
  file_size_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SoftwarePackage::file_size() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.file_size)
  return file_size_;
}
void SoftwarePackage::set_file_size(::google::protobuf::uint64 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.file_size)
}

// uint64 space_required = 7;
void SoftwarePackage::clear_space_required() {
  space_required_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SoftwarePackage::space_required() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.space_required)
  return space_required_;
}
void SoftwarePackage::set_space_required(::google::protobuf::uint64 value) {
  
  space_required_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.space_required)
}

// bool usable = 8;
void SoftwarePackage::clear_usable() {
  usable_ = false;
}
bool SoftwarePackage::usable() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.usable)
  return usable_;
}
void SoftwarePackage::set_usable(bool value) {
  
  usable_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.usable)
}

// bool trusted = 9;
void SoftwarePackage::clear_trusted() {
  trusted_ = false;
}
bool SoftwarePackage::trusted() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.trusted)
  return trusted_;
}
void SoftwarePackage::set_trusted(bool value) {
  
  trusted_ = value;
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.trusted)
}

// string supported_products = 10;
void SoftwarePackage::clear_supported_products() {
  supported_products_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SoftwarePackage::supported_products() const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackage.supported_products)
  return supported_products_.GetNoArena();
}
void SoftwarePackage::set_supported_products(const ::std::string& value) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arizona_api_service.SoftwarePackage.supported_products)
}
#if LANG_CXX11
void SoftwarePackage::set_supported_products(::std::string&& value) {
  
  supported_products_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:arizona_api_service.SoftwarePackage.supported_products)
}
#endif
void SoftwarePackage::set_supported_products(const char* value) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arizona_api_service.SoftwarePackage.supported_products)
}
void SoftwarePackage::set_supported_products(const char* value, size_t size) {
  
  supported_products_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arizona_api_service.SoftwarePackage.supported_products)
}
::std::string* SoftwarePackage::mutable_supported_products() {
  
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackage.supported_products)
  return supported_products_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SoftwarePackage::release_supported_products() {
  // @@protoc_insertion_point(field_release:arizona_api_service.SoftwarePackage.supported_products)
  
  return supported_products_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SoftwarePackage::set_allocated_supported_products(::std::string* supported_products) {
  if (supported_products != NULL) {
    
  } else {
    
  }
  supported_products_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), supported_products);
  // @@protoc_insertion_point(field_set_allocated:arizona_api_service.SoftwarePackage.supported_products)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SoftwarePackageList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SoftwarePackageList::SoftwarePackageList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:arizona_api_service.SoftwarePackageList)
}
SoftwarePackageList::SoftwarePackageList(const SoftwarePackageList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      list_(from.list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:arizona_api_service.SoftwarePackageList)
}

void SoftwarePackageList::SharedCtor() {
  _cached_size_ = 0;
}

SoftwarePackageList::~SoftwarePackageList() {
  // @@protoc_insertion_point(destructor:arizona_api_service.SoftwarePackageList)
  SharedDtor();
}

void SoftwarePackageList::SharedDtor() {
}

void SoftwarePackageList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoftwarePackageList::descriptor() {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[2].descriptor;
}

const SoftwarePackageList& SoftwarePackageList::default_instance() {
  protobuf_arizona_5fapi_5fserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SoftwarePackageList* SoftwarePackageList::New(::google::protobuf::Arena* arena) const {
  SoftwarePackageList* n = new SoftwarePackageList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SoftwarePackageList::Clear() {
// @@protoc_insertion_point(message_clear_start:arizona_api_service.SoftwarePackageList)
  list_.Clear();
}

bool SoftwarePackageList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arizona_api_service.SoftwarePackageList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .arizona_api_service.SoftwarePackage list = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arizona_api_service.SoftwarePackageList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arizona_api_service.SoftwarePackageList)
  return false;
#undef DO_
}

void SoftwarePackageList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arizona_api_service.SoftwarePackageList)
  // repeated .arizona_api_service.SoftwarePackage list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:arizona_api_service.SoftwarePackageList)
}

::google::protobuf::uint8* SoftwarePackageList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:arizona_api_service.SoftwarePackageList)
  // repeated .arizona_api_service.SoftwarePackage list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:arizona_api_service.SoftwarePackageList)
  return target;
}

size_t SoftwarePackageList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arizona_api_service.SoftwarePackageList)
  size_t total_size = 0;

  // repeated .arizona_api_service.SoftwarePackage list = 1;
  {
    unsigned int count = this->list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoftwarePackageList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arizona_api_service.SoftwarePackageList)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwarePackageList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SoftwarePackageList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arizona_api_service.SoftwarePackageList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arizona_api_service.SoftwarePackageList)
    MergeFrom(*source);
  }
}

void SoftwarePackageList::MergeFrom(const SoftwarePackageList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arizona_api_service.SoftwarePackageList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_.MergeFrom(from.list_);
}

void SoftwarePackageList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arizona_api_service.SoftwarePackageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwarePackageList::CopyFrom(const SoftwarePackageList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arizona_api_service.SoftwarePackageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwarePackageList::IsInitialized() const {
  return true;
}

void SoftwarePackageList::Swap(SoftwarePackageList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SoftwarePackageList::InternalSwap(SoftwarePackageList* other) {
  list_.UnsafeArenaSwap(&other->list_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SoftwarePackageList::GetMetadata() const {
  protobuf_arizona_5fapi_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arizona_5fapi_5fserver_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SoftwarePackageList

// repeated .arizona_api_service.SoftwarePackage list = 1;
int SoftwarePackageList::list_size() const {
  return list_.size();
}
void SoftwarePackageList::clear_list() {
  list_.Clear();
}
const ::arizona_api_service::SoftwarePackage& SoftwarePackageList::list(int index) const {
  // @@protoc_insertion_point(field_get:arizona_api_service.SoftwarePackageList.list)
  return list_.Get(index);
}
::arizona_api_service::SoftwarePackage* SoftwarePackageList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:arizona_api_service.SoftwarePackageList.list)
  return list_.Mutable(index);
}
::arizona_api_service::SoftwarePackage* SoftwarePackageList::add_list() {
  // @@protoc_insertion_point(field_add:arizona_api_service.SoftwarePackageList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >*
SoftwarePackageList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:arizona_api_service.SoftwarePackageList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::arizona_api_service::SoftwarePackage >&
SoftwarePackageList::list() const {
  // @@protoc_insertion_point(field_list:arizona_api_service.SoftwarePackageList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace arizona_api_service

// @@protoc_insertion_point(global_scope)
