// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcMessageTypes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RpcMessageTypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NanoRpc {

namespace {

const ::google::protobuf::Descriptor* RpcParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcParameter_reflection_ = NULL;
struct RpcParameterOneofInstance {
  ::google::protobuf::uint32 object_id_value_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
}* RpcParameter_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* RpcResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpcCall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcCall_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpcMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* RpcVoid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RpcVoid_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RpcStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RpcMessageTypes_2eproto() {
  protobuf_AddDesc_RpcMessageTypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RpcMessageTypes.proto");
  GOOGLE_CHECK(file != NULL);
  RpcParameter_descriptor_ = file->message_type(0);
  static const int RpcParameter_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, proto_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, any_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RpcParameter_default_oneof_instance_, object_id_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RpcParameter_default_oneof_instance_, event_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, control_),
  };
  RpcParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RpcParameter_descriptor_,
      RpcParameter::default_instance_,
      RpcParameter_offsets_,
      -1,
      -1,
      -1,
      RpcParameter_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, _oneof_case_[0]),
      sizeof(RpcParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcParameter, _is_default_instance_));
  RpcResult_descriptor_ = file->message_type(1);
  static const int RpcResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, error_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, call_result_),
  };
  RpcResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RpcResult_descriptor_,
      RpcResult::default_instance_,
      RpcResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(RpcResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcResult, _is_default_instance_));
  RpcCall_descriptor_ = file->message_type(2);
  static const int RpcCall_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, expects_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, object_id_),
  };
  RpcCall_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RpcCall_descriptor_,
      RpcCall::default_instance_,
      RpcCall_offsets_,
      -1,
      -1,
      -1,
      sizeof(RpcCall),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcCall, _is_default_instance_));
  RpcMessage_descriptor_ = file->message_type(3);
  static const int RpcMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, call_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, result_),
  };
  RpcMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RpcMessage_descriptor_,
      RpcMessage::default_instance_,
      RpcMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RpcMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcMessage, _is_default_instance_));
  RpcVoid_descriptor_ = file->message_type(4);
  static const int RpcVoid_offsets_[1] = {
  };
  RpcVoid_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RpcVoid_descriptor_,
      RpcVoid::default_instance_,
      RpcVoid_offsets_,
      -1,
      -1,
      -1,
      sizeof(RpcVoid),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcVoid, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcVoid, _is_default_instance_));
  RpcStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RpcMessageTypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RpcParameter_descriptor_, &RpcParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RpcResult_descriptor_, &RpcResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RpcCall_descriptor_, &RpcCall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RpcMessage_descriptor_, &RpcMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RpcVoid_descriptor_, &RpcVoid::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RpcMessageTypes_2eproto() {
  delete RpcParameter::default_instance_;
  delete RpcParameter_default_oneof_instance_;
  delete RpcParameter_reflection_;
  delete RpcResult::default_instance_;
  delete RpcResult_reflection_;
  delete RpcCall::default_instance_;
  delete RpcCall_reflection_;
  delete RpcMessage::default_instance_;
  delete RpcMessage_reflection_;
  delete RpcVoid::default_instance_;
  delete RpcVoid_reflection_;
}

void protobuf_AddDesc_RpcMessageTypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025RpcMessageTypes.proto\022\007NanoRpc\032\031google"
    "/protobuf/any.proto\032\036google/protobuf/wra"
    "ppers.proto\032 google/protobuf/descriptor."
    "proto\"\264\001\n\014RpcParameter\0220\n\013proto_value\030\001 "
    "\001(\0132\033.google.protobuf.BytesValue\022\'\n\tany_"
    "value\030\002 \001(\0132\024.google.protobuf.Any\022\r\n\005val"
    "ue\030\003 \001(\014\022\031\n\017object_id_value\030\021 \001(\rH\000\022\024\n\ne"
    "vent_name\030\022 \001(\tH\000B\t\n\007control\"r\n\tRpcResul"
    "t\022\"\n\006status\030\001 \001(\0162\022.NanoRpc.RpcStatus\022\025\n"
    "\rerror_message\030\002 \001(\t\022*\n\013call_result\030\003 \001("
    "\0132\025.NanoRpc.RpcParameter\"\200\001\n\007RpcCall\022\017\n\007"
    "service\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\022)\n\nparamet"
    "ers\030\003 \003(\0132\025.NanoRpc.RpcParameter\022\026\n\016expe"
    "cts_result\030\004 \001(\010\022\021\n\tobject_id\030\005 \001(\r\"\\\n\nR"
    "pcMessage\022\n\n\002id\030\001 \001(\005\022\036\n\004call\030\002 \001(\0132\020.Na"
    "noRpc.RpcCall\022\"\n\006result\030\003 \001(\0132\022.NanoRpc."
    "RpcResult\"\t\n\007RpcVoid*\226\001\n\tRpcStatus\022\020\n\014Rp"
    "cSucceeded\020\000\022\025\n\021RpcChannelFailure\020\001\022\024\n\020R"
    "pcUnknownMethod\020\002\022\024\n\020RpcProtocolError\020\003\022"
    "\027\n\023RpcUnknownInterface\020\004\022\033\n\027RpcInvalidCa"
    "llParameter\020\005:7\n\014event_source\022\037.google.p"
    "rotobuf.MessageOptions\030\230\220\003 \001(\010:7\n\rproper"
    "ty_name\022\036.google.protobuf.MethodOptions\030"
    "\227\220\003 \001(\t:/\n\005async\022\036.google.protobuf.Metho"
    "dOptions\030\231\220\003 \001(\010b\006proto3", 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RpcMessageTypes.proto", &protobuf_RegisterTypes);
  RpcParameter::default_instance_ = new RpcParameter();
  RpcParameter_default_oneof_instance_ = new RpcParameterOneofInstance();
  RpcResult::default_instance_ = new RpcResult();
  RpcCall::default_instance_ = new RpcCall();
  RpcMessage::default_instance_ = new RpcMessage();
  RpcVoid::default_instance_ = new RpcVoid();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MessageOptions::default_instance(),
    51224, 8, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    51223, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    51225, 8, false, false);
  RpcParameter::default_instance_->InitAsDefaultInstance();
  RpcResult::default_instance_->InitAsDefaultInstance();
  RpcCall::default_instance_->InitAsDefaultInstance();
  RpcMessage::default_instance_->InitAsDefaultInstance();
  RpcVoid::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RpcMessageTypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RpcMessageTypes_2eproto {
  StaticDescriptorInitializer_RpcMessageTypes_2eproto() {
    protobuf_AddDesc_RpcMessageTypes_2eproto();
  }
} static_descriptor_initializer_RpcMessageTypes_2eproto_;
const ::google::protobuf::EnumDescriptor* RpcStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcStatus_descriptor_;
}
bool RpcStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcParameter::kProtoValueFieldNumber;
const int RpcParameter::kAnyValueFieldNumber;
const int RpcParameter::kValueFieldNumber;
const int RpcParameter::kObjectIdValueFieldNumber;
const int RpcParameter::kEventNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcParameter::RpcParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NanoRpc.RpcParameter)
}

void RpcParameter::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  proto_value_ = const_cast< ::google::protobuf::BytesValue*>(&::google::protobuf::BytesValue::default_instance());
  any_value_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
  RpcParameter_default_oneof_instance_->object_id_value_ = 0u;
  RpcParameter_default_oneof_instance_->event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RpcParameter::RpcParameter(const RpcParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NanoRpc.RpcParameter)
}

void RpcParameter::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  proto_value_ = NULL;
  any_value_ = NULL;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_control();
}

RpcParameter::~RpcParameter() {
  // @@protoc_insertion_point(destructor:NanoRpc.RpcParameter)
  SharedDtor();
}

void RpcParameter::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_control()) {
    clear_control();
  }
  if (this != default_instance_) {
    delete proto_value_;
    delete any_value_;
  }
}

void RpcParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcParameter_descriptor_;
}

const RpcParameter& RpcParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RpcMessageTypes_2eproto();
  return *default_instance_;
}

RpcParameter* RpcParameter::default_instance_ = NULL;

RpcParameter* RpcParameter::New(::google::protobuf::Arena* arena) const {
  RpcParameter* n = new RpcParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcParameter::clear_control() {
// @@protoc_insertion_point(one_of_clear_start:NanoRpc.RpcParameter)
  switch(control_case()) {
    case kObjectIdValue: {
      // No need to clear
      break;
    }
    case kEventName: {
      control_.event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTROL_NOT_SET;
}


void RpcParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:NanoRpc.RpcParameter)
  if (GetArenaNoVirtual() == NULL && proto_value_ != NULL) delete proto_value_;
  proto_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && any_value_ != NULL) delete any_value_;
  any_value_ = NULL;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_control();
}

bool RpcParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NanoRpc.RpcParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.BytesValue proto_value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proto_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_any_value;
        break;
      }

      // optional .google.protobuf.Any any_value = 2;
      case 2: {
        if (tag == 18) {
         parse_any_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional bytes value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_object_id_value;
        break;
      }

      // optional uint32 object_id_value = 17;
      case 17: {
        if (tag == 136) {
         parse_object_id_value:
          clear_control();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &control_.object_id_value_)));
          set_has_object_id_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_event_name;
        break;
      }

      // optional string event_name = 18;
      case 18: {
        if (tag == 146) {
         parse_event_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_name().data(), this->event_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NanoRpc.RpcParameter.event_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NanoRpc.RpcParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NanoRpc.RpcParameter)
  return false;
#undef DO_
}

void RpcParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NanoRpc.RpcParameter)
  // optional .google.protobuf.BytesValue proto_value = 1;
  if (this->has_proto_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->proto_value_, output);
  }

  // optional .google.protobuf.Any any_value = 2;
  if (this->has_any_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->any_value_, output);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // optional uint32 object_id_value = 17;
  if (has_object_id_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->object_id_value(), output);
  }

  // optional string event_name = 18;
  if (has_event_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcParameter.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->event_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:NanoRpc.RpcParameter)
}

::google::protobuf::uint8* RpcParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NanoRpc.RpcParameter)
  // optional .google.protobuf.BytesValue proto_value = 1;
  if (this->has_proto_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->proto_value_, target);
  }

  // optional .google.protobuf.Any any_value = 2;
  if (this->has_any_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->any_value_, target);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // optional uint32 object_id_value = 17;
  if (has_object_id_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->object_id_value(), target);
  }

  // optional string event_name = 18;
  if (has_event_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_name().data(), this->event_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcParameter.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->event_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NanoRpc.RpcParameter)
  return target;
}

int RpcParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NanoRpc.RpcParameter)
  int total_size = 0;

  // optional .google.protobuf.BytesValue proto_value = 1;
  if (this->has_proto_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->proto_value_);
  }

  // optional .google.protobuf.Any any_value = 2;
  if (this->has_any_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->any_value_);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  switch (control_case()) {
    // optional uint32 object_id_value = 17;
    case kObjectIdValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->object_id_value());
      break;
    }
    // optional string event_name = 18;
    case kEventName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_name());
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NanoRpc.RpcParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RpcParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NanoRpc.RpcParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NanoRpc.RpcParameter)
    MergeFrom(*source);
  }
}

void RpcParameter::MergeFrom(const RpcParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NanoRpc.RpcParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.control_case()) {
    case kObjectIdValue: {
      set_object_id_value(from.object_id_value());
      break;
    }
    case kEventName: {
      set_event_name(from.event_name());
      break;
    }
    case CONTROL_NOT_SET: {
      break;
    }
  }
  if (from.has_proto_value()) {
    mutable_proto_value()->::google::protobuf::BytesValue::MergeFrom(from.proto_value());
  }
  if (from.has_any_value()) {
    mutable_any_value()->::google::protobuf::Any::MergeFrom(from.any_value());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void RpcParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NanoRpc.RpcParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcParameter::CopyFrom(const RpcParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NanoRpc.RpcParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcParameter::IsInitialized() const {

  return true;
}

void RpcParameter::Swap(RpcParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcParameter::InternalSwap(RpcParameter* other) {
  std::swap(proto_value_, other->proto_value_);
  std::swap(any_value_, other->any_value_);
  value_.Swap(&other->value_);
  std::swap(control_, other->control_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpcParameter_descriptor_;
  metadata.reflection = RpcParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcParameter

// optional .google.protobuf.BytesValue proto_value = 1;
bool RpcParameter::has_proto_value() const {
  return !_is_default_instance_ && proto_value_ != NULL;
}
void RpcParameter::clear_proto_value() {
  if (GetArenaNoVirtual() == NULL && proto_value_ != NULL) delete proto_value_;
  proto_value_ = NULL;
}
const ::google::protobuf::BytesValue& RpcParameter::proto_value() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcParameter.proto_value)
  return proto_value_ != NULL ? *proto_value_ : *default_instance_->proto_value_;
}
::google::protobuf::BytesValue* RpcParameter::mutable_proto_value() {
  
  if (proto_value_ == NULL) {
    proto_value_ = new ::google::protobuf::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcParameter.proto_value)
  return proto_value_;
}
::google::protobuf::BytesValue* RpcParameter::release_proto_value() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcParameter.proto_value)
  
  ::google::protobuf::BytesValue* temp = proto_value_;
  proto_value_ = NULL;
  return temp;
}
void RpcParameter::set_allocated_proto_value(::google::protobuf::BytesValue* proto_value) {
  delete proto_value_;
  if (proto_value != NULL && proto_value->GetArena() != NULL) {
    ::google::protobuf::BytesValue* new_proto_value = new ::google::protobuf::BytesValue;
    new_proto_value->CopyFrom(*proto_value);
    proto_value = new_proto_value;
  }
  proto_value_ = proto_value;
  if (proto_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcParameter.proto_value)
}

// optional .google.protobuf.Any any_value = 2;
bool RpcParameter::has_any_value() const {
  return !_is_default_instance_ && any_value_ != NULL;
}
void RpcParameter::clear_any_value() {
  if (GetArenaNoVirtual() == NULL && any_value_ != NULL) delete any_value_;
  any_value_ = NULL;
}
const ::google::protobuf::Any& RpcParameter::any_value() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcParameter.any_value)
  return any_value_ != NULL ? *any_value_ : *default_instance_->any_value_;
}
::google::protobuf::Any* RpcParameter::mutable_any_value() {
  
  if (any_value_ == NULL) {
    any_value_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcParameter.any_value)
  return any_value_;
}
::google::protobuf::Any* RpcParameter::release_any_value() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcParameter.any_value)
  
  ::google::protobuf::Any* temp = any_value_;
  any_value_ = NULL;
  return temp;
}
void RpcParameter::set_allocated_any_value(::google::protobuf::Any* any_value) {
  delete any_value_;
  any_value_ = any_value;
  if (any_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcParameter.any_value)
}

// optional bytes value = 3;
void RpcParameter::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RpcParameter::value() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcParameter.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcParameter::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NanoRpc.RpcParameter.value)
}
 void RpcParameter::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NanoRpc.RpcParameter.value)
}
 void RpcParameter::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NanoRpc.RpcParameter.value)
}
 ::std::string* RpcParameter::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcParameter.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RpcParameter::release_value() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcParameter.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcParameter::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcParameter.value)
}

// optional uint32 object_id_value = 17;
bool RpcParameter::has_object_id_value() const {
  return control_case() == kObjectIdValue;
}
void RpcParameter::set_has_object_id_value() {
  _oneof_case_[0] = kObjectIdValue;
}
void RpcParameter::clear_object_id_value() {
  if (has_object_id_value()) {
    control_.object_id_value_ = 0u;
    clear_has_control();
  }
}
 ::google::protobuf::uint32 RpcParameter::object_id_value() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcParameter.object_id_value)
  if (has_object_id_value()) {
    return control_.object_id_value_;
  }
  return 0u;
}
 void RpcParameter::set_object_id_value(::google::protobuf::uint32 value) {
  if (!has_object_id_value()) {
    clear_control();
    set_has_object_id_value();
  }
  control_.object_id_value_ = value;
  // @@protoc_insertion_point(field_set:NanoRpc.RpcParameter.object_id_value)
}

// optional string event_name = 18;
bool RpcParameter::has_event_name() const {
  return control_case() == kEventName;
}
void RpcParameter::set_has_event_name() {
  _oneof_case_[0] = kEventName;
}
void RpcParameter::clear_event_name() {
  if (has_event_name()) {
    control_.event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_control();
  }
}
 const ::std::string& RpcParameter::event_name() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcParameter.event_name)
  if (has_event_name()) {
    return control_.event_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void RpcParameter::set_event_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NanoRpc.RpcParameter.event_name)
  if (!has_event_name()) {
    clear_control();
    set_has_event_name();
    control_.event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  control_.event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NanoRpc.RpcParameter.event_name)
}
 void RpcParameter::set_event_name(const char* value) {
  if (!has_event_name()) {
    clear_control();
    set_has_event_name();
    control_.event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  control_.event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NanoRpc.RpcParameter.event_name)
}
 void RpcParameter::set_event_name(const char* value, size_t size) {
  if (!has_event_name()) {
    clear_control();
    set_has_event_name();
    control_.event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  control_.event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NanoRpc.RpcParameter.event_name)
}
 ::std::string* RpcParameter::mutable_event_name() {
  if (!has_event_name()) {
    clear_control();
    set_has_event_name();
    control_.event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcParameter.event_name)
  return control_.event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RpcParameter::release_event_name() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcParameter.event_name)
  if (has_event_name()) {
    clear_has_control();
    return control_.event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void RpcParameter::set_allocated_event_name(::std::string* event_name) {
  if (!has_event_name()) {
    control_.event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_control();
  if (event_name != NULL) {
    set_has_event_name();
    control_.event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        event_name);
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcParameter.event_name)
}

bool RpcParameter::has_control() const {
  return control_case() != CONTROL_NOT_SET;
}
void RpcParameter::clear_has_control() {
  _oneof_case_[0] = CONTROL_NOT_SET;
}
RpcParameter::ControlCase RpcParameter::control_case() const {
  return RpcParameter::ControlCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcResult::kStatusFieldNumber;
const int RpcResult::kErrorMessageFieldNumber;
const int RpcResult::kCallResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcResult::RpcResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NanoRpc.RpcResult)
}

void RpcResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  call_result_ = const_cast< ::NanoRpc::RpcParameter*>(&::NanoRpc::RpcParameter::default_instance());
}

RpcResult::RpcResult(const RpcResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NanoRpc.RpcResult)
}

void RpcResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_result_ = NULL;
}

RpcResult::~RpcResult() {
  // @@protoc_insertion_point(destructor:NanoRpc.RpcResult)
  SharedDtor();
}

void RpcResult::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete call_result_;
  }
}

void RpcResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcResult_descriptor_;
}

const RpcResult& RpcResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RpcMessageTypes_2eproto();
  return *default_instance_;
}

RpcResult* RpcResult::default_instance_ = NULL;

RpcResult* RpcResult::New(::google::protobuf::Arena* arena) const {
  RpcResult* n = new RpcResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcResult::Clear() {
// @@protoc_insertion_point(message_clear_start:NanoRpc.RpcResult)
  status_ = 0;
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && call_result_ != NULL) delete call_result_;
  call_result_ = NULL;
}

bool RpcResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NanoRpc.RpcResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .NanoRpc.RpcStatus status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::NanoRpc::RpcStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error_message;
        break;
      }

      // optional string error_message = 2;
      case 2: {
        if (tag == 18) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NanoRpc.RpcResult.error_message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_call_result;
        break;
      }

      // optional .NanoRpc.RpcParameter call_result = 3;
      case 3: {
        if (tag == 26) {
         parse_call_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_call_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NanoRpc.RpcResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NanoRpc.RpcResult)
  return false;
#undef DO_
}

void RpcResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NanoRpc.RpcResult)
  // optional .NanoRpc.RpcStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcResult.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  // optional .NanoRpc.RpcParameter call_result = 3;
  if (this->has_call_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->call_result_, output);
  }

  // @@protoc_insertion_point(serialize_end:NanoRpc.RpcResult)
}

::google::protobuf::uint8* RpcResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NanoRpc.RpcResult)
  // optional .NanoRpc.RpcStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcResult.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  // optional .NanoRpc.RpcParameter call_result = 3;
  if (this->has_call_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->call_result_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NanoRpc.RpcResult)
  return target;
}

int RpcResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NanoRpc.RpcResult)
  int total_size = 0;

  // optional .NanoRpc.RpcStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // optional .NanoRpc.RpcParameter call_result = 3;
  if (this->has_call_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->call_result_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NanoRpc.RpcResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RpcResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NanoRpc.RpcResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NanoRpc.RpcResult)
    MergeFrom(*source);
  }
}

void RpcResult::MergeFrom(const RpcResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NanoRpc.RpcResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_call_result()) {
    mutable_call_result()->::NanoRpc::RpcParameter::MergeFrom(from.call_result());
  }
}

void RpcResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NanoRpc.RpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcResult::CopyFrom(const RpcResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NanoRpc.RpcResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcResult::IsInitialized() const {

  return true;
}

void RpcResult::Swap(RpcResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcResult::InternalSwap(RpcResult* other) {
  std::swap(status_, other->status_);
  error_message_.Swap(&other->error_message_);
  std::swap(call_result_, other->call_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpcResult_descriptor_;
  metadata.reflection = RpcResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcResult

// optional .NanoRpc.RpcStatus status = 1;
void RpcResult::clear_status() {
  status_ = 0;
}
 ::NanoRpc::RpcStatus RpcResult::status() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcResult.status)
  return static_cast< ::NanoRpc::RpcStatus >(status_);
}
 void RpcResult::set_status(::NanoRpc::RpcStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:NanoRpc.RpcResult.status)
}

// optional string error_message = 2;
void RpcResult::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RpcResult::error_message() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcResult.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcResult::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NanoRpc.RpcResult.error_message)
}
 void RpcResult::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NanoRpc.RpcResult.error_message)
}
 void RpcResult::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NanoRpc.RpcResult.error_message)
}
 ::std::string* RpcResult::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcResult.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RpcResult::release_error_message() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcResult.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcResult::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcResult.error_message)
}

// optional .NanoRpc.RpcParameter call_result = 3;
bool RpcResult::has_call_result() const {
  return !_is_default_instance_ && call_result_ != NULL;
}
void RpcResult::clear_call_result() {
  if (GetArenaNoVirtual() == NULL && call_result_ != NULL) delete call_result_;
  call_result_ = NULL;
}
const ::NanoRpc::RpcParameter& RpcResult::call_result() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcResult.call_result)
  return call_result_ != NULL ? *call_result_ : *default_instance_->call_result_;
}
::NanoRpc::RpcParameter* RpcResult::mutable_call_result() {
  
  if (call_result_ == NULL) {
    call_result_ = new ::NanoRpc::RpcParameter;
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcResult.call_result)
  return call_result_;
}
::NanoRpc::RpcParameter* RpcResult::release_call_result() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcResult.call_result)
  
  ::NanoRpc::RpcParameter* temp = call_result_;
  call_result_ = NULL;
  return temp;
}
void RpcResult::set_allocated_call_result(::NanoRpc::RpcParameter* call_result) {
  delete call_result_;
  call_result_ = call_result;
  if (call_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcResult.call_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcCall::kServiceFieldNumber;
const int RpcCall::kMethodFieldNumber;
const int RpcCall::kParametersFieldNumber;
const int RpcCall::kExpectsResultFieldNumber;
const int RpcCall::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcCall::RpcCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NanoRpc.RpcCall)
}

void RpcCall::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RpcCall::RpcCall(const RpcCall& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NanoRpc.RpcCall)
}

void RpcCall::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expects_result_ = false;
  object_id_ = 0u;
}

RpcCall::~RpcCall() {
  // @@protoc_insertion_point(destructor:NanoRpc.RpcCall)
  SharedDtor();
}

void RpcCall::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RpcCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcCall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcCall_descriptor_;
}

const RpcCall& RpcCall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RpcMessageTypes_2eproto();
  return *default_instance_;
}

RpcCall* RpcCall::default_instance_ = NULL;

RpcCall* RpcCall::New(::google::protobuf::Arena* arena) const {
  RpcCall* n = new RpcCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcCall::Clear() {
// @@protoc_insertion_point(message_clear_start:NanoRpc.RpcCall)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RpcCall, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RpcCall*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(expects_result_, object_id_);
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  parameters_.Clear();
}

bool RpcCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NanoRpc.RpcCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NanoRpc.RpcCall.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_method;
        break;
      }

      // optional string method = 2;
      case 2: {
        if (tag == 18) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NanoRpc.RpcCall.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_parameters;
        break;
      }

      // repeated .NanoRpc.RpcParameter parameters = 3;
      case 3: {
        if (tag == 26) {
         parse_parameters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_parameters;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_expects_result;
        break;
      }

      // optional bool expects_result = 4;
      case 4: {
        if (tag == 32) {
         parse_expects_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &expects_result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_object_id;
        break;
      }

      // optional uint32 object_id = 5;
      case 5: {
        if (tag == 40) {
         parse_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &object_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NanoRpc.RpcCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NanoRpc.RpcCall)
  return false;
#undef DO_
}

void RpcCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NanoRpc.RpcCall)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcCall.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcCall.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // repeated .NanoRpc.RpcParameter parameters = 3;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parameters(i), output);
  }

  // optional bool expects_result = 4;
  if (this->expects_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->expects_result(), output);
  }

  // optional uint32 object_id = 5;
  if (this->object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->object_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NanoRpc.RpcCall)
}

::google::protobuf::uint8* RpcCall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NanoRpc.RpcCall)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcCall.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NanoRpc.RpcCall.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // repeated .NanoRpc.RpcParameter parameters = 3;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parameters(i), target);
  }

  // optional bool expects_result = 4;
  if (this->expects_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->expects_result(), target);
  }

  // optional uint32 object_id = 5;
  if (this->object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->object_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NanoRpc.RpcCall)
  return target;
}

int RpcCall::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NanoRpc.RpcCall)
  int total_size = 0;

  // optional string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional bool expects_result = 4;
  if (this->expects_result() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 object_id = 5;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->object_id());
  }

  // repeated .NanoRpc.RpcParameter parameters = 3;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NanoRpc.RpcCall)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RpcCall* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NanoRpc.RpcCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NanoRpc.RpcCall)
    MergeFrom(*source);
  }
}

void RpcCall::MergeFrom(const RpcCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NanoRpc.RpcCall)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  parameters_.MergeFrom(from.parameters_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.expects_result() != 0) {
    set_expects_result(from.expects_result());
  }
  if (from.object_id() != 0) {
    set_object_id(from.object_id());
  }
}

void RpcCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NanoRpc.RpcCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcCall::CopyFrom(const RpcCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NanoRpc.RpcCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcCall::IsInitialized() const {

  return true;
}

void RpcCall::Swap(RpcCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcCall::InternalSwap(RpcCall* other) {
  service_.Swap(&other->service_);
  method_.Swap(&other->method_);
  parameters_.UnsafeArenaSwap(&other->parameters_);
  std::swap(expects_result_, other->expects_result_);
  std::swap(object_id_, other->object_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcCall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpcCall_descriptor_;
  metadata.reflection = RpcCall_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcCall

// optional string service = 1;
void RpcCall::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RpcCall::service() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcCall.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcCall::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NanoRpc.RpcCall.service)
}
 void RpcCall::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NanoRpc.RpcCall.service)
}
 void RpcCall::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NanoRpc.RpcCall.service)
}
 ::std::string* RpcCall::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcCall.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RpcCall::release_service() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcCall.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcCall::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcCall.service)
}

// optional string method = 2;
void RpcCall::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RpcCall::method() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcCall.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcCall::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NanoRpc.RpcCall.method)
}
 void RpcCall::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NanoRpc.RpcCall.method)
}
 void RpcCall::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NanoRpc.RpcCall.method)
}
 ::std::string* RpcCall::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcCall.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RpcCall::release_method() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcCall.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RpcCall::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcCall.method)
}

// repeated .NanoRpc.RpcParameter parameters = 3;
int RpcCall::parameters_size() const {
  return parameters_.size();
}
void RpcCall::clear_parameters() {
  parameters_.Clear();
}
const ::NanoRpc::RpcParameter& RpcCall::parameters(int index) const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcCall.parameters)
  return parameters_.Get(index);
}
::NanoRpc::RpcParameter* RpcCall::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcCall.parameters)
  return parameters_.Mutable(index);
}
::NanoRpc::RpcParameter* RpcCall::add_parameters() {
  // @@protoc_insertion_point(field_add:NanoRpc.RpcCall.parameters)
  return parameters_.Add();
}
::google::protobuf::RepeatedPtrField< ::NanoRpc::RpcParameter >*
RpcCall::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:NanoRpc.RpcCall.parameters)
  return &parameters_;
}
const ::google::protobuf::RepeatedPtrField< ::NanoRpc::RpcParameter >&
RpcCall::parameters() const {
  // @@protoc_insertion_point(field_list:NanoRpc.RpcCall.parameters)
  return parameters_;
}

// optional bool expects_result = 4;
void RpcCall::clear_expects_result() {
  expects_result_ = false;
}
 bool RpcCall::expects_result() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcCall.expects_result)
  return expects_result_;
}
 void RpcCall::set_expects_result(bool value) {
  
  expects_result_ = value;
  // @@protoc_insertion_point(field_set:NanoRpc.RpcCall.expects_result)
}

// optional uint32 object_id = 5;
void RpcCall::clear_object_id() {
  object_id_ = 0u;
}
 ::google::protobuf::uint32 RpcCall::object_id() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcCall.object_id)
  return object_id_;
}
 void RpcCall::set_object_id(::google::protobuf::uint32 value) {
  
  object_id_ = value;
  // @@protoc_insertion_point(field_set:NanoRpc.RpcCall.object_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcMessage::kIdFieldNumber;
const int RpcMessage::kCallFieldNumber;
const int RpcMessage::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcMessage::RpcMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NanoRpc.RpcMessage)
}

void RpcMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  call_ = const_cast< ::NanoRpc::RpcCall*>(&::NanoRpc::RpcCall::default_instance());
  result_ = const_cast< ::NanoRpc::RpcResult*>(&::NanoRpc::RpcResult::default_instance());
}

RpcMessage::RpcMessage(const RpcMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NanoRpc.RpcMessage)
}

void RpcMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  call_ = NULL;
  result_ = NULL;
}

RpcMessage::~RpcMessage() {
  // @@protoc_insertion_point(destructor:NanoRpc.RpcMessage)
  SharedDtor();
}

void RpcMessage::SharedDtor() {
  if (this != default_instance_) {
    delete call_;
    delete result_;
  }
}

void RpcMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcMessage_descriptor_;
}

const RpcMessage& RpcMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RpcMessageTypes_2eproto();
  return *default_instance_;
}

RpcMessage* RpcMessage::default_instance_ = NULL;

RpcMessage* RpcMessage::New(::google::protobuf::Arena* arena) const {
  RpcMessage* n = new RpcMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:NanoRpc.RpcMessage)
  id_ = 0;
  if (GetArenaNoVirtual() == NULL && call_ != NULL) delete call_;
  call_ = NULL;
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}

bool RpcMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NanoRpc.RpcMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_call;
        break;
      }

      // optional .NanoRpc.RpcCall call = 2;
      case 2: {
        if (tag == 18) {
         parse_call:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_call()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_result;
        break;
      }

      // optional .NanoRpc.RpcResult result = 3;
      case 3: {
        if (tag == 26) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NanoRpc.RpcMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NanoRpc.RpcMessage)
  return false;
#undef DO_
}

void RpcMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NanoRpc.RpcMessage)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .NanoRpc.RpcCall call = 2;
  if (this->has_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->call_, output);
  }

  // optional .NanoRpc.RpcResult result = 3;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->result_, output);
  }

  // @@protoc_insertion_point(serialize_end:NanoRpc.RpcMessage)
}

::google::protobuf::uint8* RpcMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NanoRpc.RpcMessage)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .NanoRpc.RpcCall call = 2;
  if (this->has_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->call_, target);
  }

  // optional .NanoRpc.RpcResult result = 3;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->result_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NanoRpc.RpcMessage)
  return target;
}

int RpcMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NanoRpc.RpcMessage)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional .NanoRpc.RpcCall call = 2;
  if (this->has_call()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->call_);
  }

  // optional .NanoRpc.RpcResult result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NanoRpc.RpcMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RpcMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NanoRpc.RpcMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NanoRpc.RpcMessage)
    MergeFrom(*source);
  }
}

void RpcMessage::MergeFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NanoRpc.RpcMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.has_call()) {
    mutable_call()->::NanoRpc::RpcCall::MergeFrom(from.call());
  }
  if (from.has_result()) {
    mutable_result()->::NanoRpc::RpcResult::MergeFrom(from.result());
  }
}

void RpcMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NanoRpc.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcMessage::CopyFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NanoRpc.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcMessage::IsInitialized() const {

  return true;
}

void RpcMessage::Swap(RpcMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcMessage::InternalSwap(RpcMessage* other) {
  std::swap(id_, other->id_);
  std::swap(call_, other->call_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpcMessage_descriptor_;
  metadata.reflection = RpcMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcMessage

// optional int32 id = 1;
void RpcMessage::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 RpcMessage::id() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcMessage.id)
  return id_;
}
 void RpcMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NanoRpc.RpcMessage.id)
}

// optional .NanoRpc.RpcCall call = 2;
bool RpcMessage::has_call() const {
  return !_is_default_instance_ && call_ != NULL;
}
void RpcMessage::clear_call() {
  if (GetArenaNoVirtual() == NULL && call_ != NULL) delete call_;
  call_ = NULL;
}
const ::NanoRpc::RpcCall& RpcMessage::call() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcMessage.call)
  return call_ != NULL ? *call_ : *default_instance_->call_;
}
::NanoRpc::RpcCall* RpcMessage::mutable_call() {
  
  if (call_ == NULL) {
    call_ = new ::NanoRpc::RpcCall;
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcMessage.call)
  return call_;
}
::NanoRpc::RpcCall* RpcMessage::release_call() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcMessage.call)
  
  ::NanoRpc::RpcCall* temp = call_;
  call_ = NULL;
  return temp;
}
void RpcMessage::set_allocated_call(::NanoRpc::RpcCall* call) {
  delete call_;
  call_ = call;
  if (call) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcMessage.call)
}

// optional .NanoRpc.RpcResult result = 3;
bool RpcMessage::has_result() const {
  return !_is_default_instance_ && result_ != NULL;
}
void RpcMessage::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::NanoRpc::RpcResult& RpcMessage::result() const {
  // @@protoc_insertion_point(field_get:NanoRpc.RpcMessage.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
::NanoRpc::RpcResult* RpcMessage::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::NanoRpc::RpcResult;
  }
  // @@protoc_insertion_point(field_mutable:NanoRpc.RpcMessage.result)
  return result_;
}
::NanoRpc::RpcResult* RpcMessage::release_result() {
  // @@protoc_insertion_point(field_release:NanoRpc.RpcMessage.result)
  
  ::NanoRpc::RpcResult* temp = result_;
  result_ = NULL;
  return temp;
}
void RpcMessage::set_allocated_result(::NanoRpc::RpcResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NanoRpc.RpcMessage.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcVoid::RpcVoid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NanoRpc.RpcVoid)
}

void RpcVoid::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RpcVoid::RpcVoid(const RpcVoid& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NanoRpc.RpcVoid)
}

void RpcVoid::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

RpcVoid::~RpcVoid() {
  // @@protoc_insertion_point(destructor:NanoRpc.RpcVoid)
  SharedDtor();
}

void RpcVoid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RpcVoid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcVoid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RpcVoid_descriptor_;
}

const RpcVoid& RpcVoid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RpcMessageTypes_2eproto();
  return *default_instance_;
}

RpcVoid* RpcVoid::default_instance_ = NULL;

RpcVoid* RpcVoid::New(::google::protobuf::Arena* arena) const {
  RpcVoid* n = new RpcVoid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcVoid::Clear() {
// @@protoc_insertion_point(message_clear_start:NanoRpc.RpcVoid)
}

bool RpcVoid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NanoRpc.RpcVoid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:NanoRpc.RpcVoid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NanoRpc.RpcVoid)
  return false;
#undef DO_
}

void RpcVoid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NanoRpc.RpcVoid)
  // @@protoc_insertion_point(serialize_end:NanoRpc.RpcVoid)
}

::google::protobuf::uint8* RpcVoid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NanoRpc.RpcVoid)
  // @@protoc_insertion_point(serialize_to_array_end:NanoRpc.RpcVoid)
  return target;
}

int RpcVoid::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NanoRpc.RpcVoid)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RpcVoid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NanoRpc.RpcVoid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RpcVoid* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcVoid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NanoRpc.RpcVoid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NanoRpc.RpcVoid)
    MergeFrom(*source);
  }
}

void RpcVoid::MergeFrom(const RpcVoid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NanoRpc.RpcVoid)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void RpcVoid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NanoRpc.RpcVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcVoid::CopyFrom(const RpcVoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NanoRpc.RpcVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcVoid::IsInitialized() const {

  return true;
}

void RpcVoid::Swap(RpcVoid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcVoid::InternalSwap(RpcVoid* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RpcVoid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RpcVoid_descriptor_;
  metadata.reflection = RpcVoid_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcVoid

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  event_source(kEventSourceFieldNumber, false);
const ::std::string property_name_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  property_name(kPropertyNameFieldNumber, property_name_default);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  async(kAsyncFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

}  // namespace NanoRpc

// @@protoc_insertion_point(global_scope)
