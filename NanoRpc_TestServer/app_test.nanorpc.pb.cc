// Generated by the nanorpc protobuf plugin.
// If you make any local change, they will be lost.
// source: app_test.proto

#include "app_test.nanorpc.pb.h"

namespace app {

const char *ITestApp::GetInterfaceName() const {
  return "app.ITestApp";
}

void ITestApp::CallMethod(const nanorpc2::RpcCall &rpc_call, nanorpc2::RpcResult *rpc_result) {
  if (rpc_call.method() == "BoolValue") {
    impl_->BoolValue();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "IntValue") {
    impl_->IntValue();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "EnumValue") {
    impl_->EnumValue();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "StringValue") {
    impl_->StringValue();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "StructValue") {
    impl_->StructValue();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "SyncVoidMethod") {
    impl_->SyncVoidMethod();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "AsyncVoidMethod") {
    impl_->AsyncVoidMethod();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "SetStructReturnIntMethod") {
    int32_t out__;
    AppStruct value;
    value.ParseFromString(rpc_call.call_data());
    out__ = impl_->SetStructReturnIntMethod(value);
    google::protbuf::Int32Value out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "GetStructMethod") {
    AppStruct out__;
    int32_t value;
    value.ParseFromString(rpc_call.call_data());
    impl_->GetStructMethod(value, &out__);
    AppStruct out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithoutParameters0") {
    impl_->MethodWithoutParameters0();
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithoutParameters1") {
    bool out__;
    out__ = impl_->MethodWithoutParameters1();
    google::protbuf::BoolValue out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithoutParameters2") {
    std::string out__;
    impl_->MethodWithoutParameters2(, &out__);
    google::protbuf::StringValue out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithoutParameters3") {
    AppStruct out__;
    impl_->MethodWithoutParameters3(, &out__);
    AppStruct out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithParameters0") {
    std::string name;
    int32_t index;
    MethodWithParameters_args args__;
    args__.ParseFromString(rpc_call.call_data());
    args__.name_value(&name);
    index = args__.index();
    impl_->MethodWithParameters0(name, index);
     out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithParameters1") {
    bool out__;
    std::string name;
    int32_t index;
    MethodWithParameters_args args__;
    args__.ParseFromString(rpc_call.call_data());
    args__.name_value(&name);
    index = args__.index();
    out__ = impl_->MethodWithParameters1(name, index);
    google::protbuf::BoolValue out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  } else if (rpc_call.method() == "MethodWithParameters2") {
    AppStruct out__;
    std::string name;
    int32_t index;
    MethodWithParameters_args args__;
    args__.ParseFromString(rpc_call.call_data());
    args__.name_value(&name);
    index = args__.index();
    impl_->MethodWithParameters2(name, index, &out__);
    AppStruct out_pb__;
    out_pb__.set_value(out__);
    out_pb__.SerializeToString(rpc_result->mutable_call_result()->mutable_value());
  }

}

}  // namespace app


